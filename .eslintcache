[{"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\index.js":"1","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\App.js":"2","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\reportWebVitals.js":"3","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\navigation\\NavigationBar.js":"4","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\SearchAndRetrieve.js":"5","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\CategoriesLevel3.js":"6","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Home\\Home.js":"7","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Home\\Home1.js":"8","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\navigation\\Footer.js":"9","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\videos\\AddVideoModel.js":"10","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\CategoryLevel1.js":"11","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\CategoriesLevel2.js":"12","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\Category.js":"13","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\MainVideo.js":"14","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\Level1Annotations.js":"15","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\AnnotationBar.js":"16","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\VideoTrimmer.js":"17","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\Timeline.js":"18","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\Complete.js":"19","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\Analyze.js":"20","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\Annotatemain.js":"21","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\AnnotateVideo.js":"22","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\videos\\AddVideoModelAnnotate.js":"23","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\ViewAnnotations.js":"24","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\configs\\config.js":"25","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\markcomplete\\MarkAnnotateCompleteModel.js":"26","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level2Annotations\\Level2Annotations.js":"27","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level2Annotations\\VideoTrimmerLevel2.js":"28","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level2Annotations\\ViewAnnotationsLevelTwo.js":"29","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level3Annotations\\Level3Annotations.js":"30","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level3Annotations\\VideoTrimmerLevel3.js":"31","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level3Annotations\\ViewAnnotationsLevelThree.js":"32"},{"size":500,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":3983,"mtime":1617861891659,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":2878,"mtime":1617294922090,"results":"37","hashOfConfig":"34"},{"size":264,"mtime":1611935115526,"results":"38","hashOfConfig":"34"},{"size":9081,"mtime":1617101421725,"results":"39","hashOfConfig":"34"},{"size":4879,"mtime":1617295289872,"results":"40","hashOfConfig":"34"},{"size":12008,"mtime":1616598285743,"results":"41","hashOfConfig":"34"},{"size":4415,"mtime":1614431239958,"results":"42","hashOfConfig":"34"},{"size":2977,"mtime":1613095699475,"results":"43","hashOfConfig":"34"},{"size":5035,"mtime":1617100841843,"results":"44","hashOfConfig":"34"},{"size":6273,"mtime":1617101180163,"results":"45","hashOfConfig":"34"},{"size":5728,"mtime":1617101488769,"results":"46","hashOfConfig":"34"},{"size":6323,"mtime":1617114030235,"results":"47","hashOfConfig":"34"},{"size":4063,"mtime":1617103951459,"results":"48","hashOfConfig":"34"},{"size":262,"mtime":1615998070706,"results":"49","hashOfConfig":"34"},{"size":12200,"mtime":1617803869862,"results":"50","hashOfConfig":"34"},{"size":268,"mtime":1615998074061,"results":"51","hashOfConfig":"34"},{"size":204,"mtime":1613619361509,"results":"52","hashOfConfig":"34"},{"size":1768,"mtime":1615994768651,"results":"53","hashOfConfig":"34"},{"size":1489,"mtime":1613982437083,"results":"54","hashOfConfig":"34"},{"size":1817,"mtime":1615995296228,"results":"55","hashOfConfig":"34"},{"size":2978,"mtime":1616598208011,"results":"56","hashOfConfig":"34"},{"size":6470,"mtime":1617875890108,"results":"57","hashOfConfig":"34"},{"size":1002,"mtime":1617862563452,"results":"58","hashOfConfig":"34"},{"size":5175,"mtime":1617115383706,"results":"59","hashOfConfig":"34"},{"size":5068,"mtime":1617799748323,"results":"60","hashOfConfig":"34"},{"size":12395,"mtime":1617809090008,"results":"61","hashOfConfig":"34"},{"size":5502,"mtime":1617876228492,"results":"62","hashOfConfig":"34"},{"size":5641,"mtime":1617871316059,"results":"63","hashOfConfig":"34"},{"size":12629,"mtime":1617873248480,"results":"64","hashOfConfig":"34"},{"size":3784,"mtime":1617876165101,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"f0mvb2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"68"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"68"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\index.js",[],["153","154"],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\App.js",["155"],"import React, {Component} from 'react';\nimport './App.css';\nimport NavigationBar from \"./navigation/NavigationBar\";\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport Switch from \"react-bootstrap/Switch\";\nimport Analyze from \"./components/AnnotatingDisplay/Analyze\";\nimport CategoryLevel1 from \"./components/Categaries/CategoryLevel1\";\nimport SearchAndRetrieve from \"./components/SearchAndRetrieve\";\nimport Home from \"./components/Home/Home\";\nimport CategoriesLevel2 from \"./components/Categaries/CategoriesLevel2\";\nimport Categorieslevel3 from \"./components/Categaries/CategoriesLevel3\";\nimport Complete from \"./components/AnnotatingDisplay/Complete\";\n//import { Redirect } from 'react-router-dom'\nimport Home1 from \"./components/Home/Home1\";\nimport Footer from \"./navigation/Footer\";\nimport Category from \"./components/Categaries/Category\";\nimport Annotatemain from \"./components/AnnotatingDisplay/Annotatemain\";\nimport MainVideo from \"./components/VideoAnnotating/MainVideo\";\nimport Level1Annotations from \"./components/VideoAnnotating/Level1Annotations\";\nimport Level2Annotations from \"./components/VideoAnnotating/level2Annotations/Level2Annotations\";\nimport Level3Annotations from \"./components/VideoAnnotating/level3Annotations/Level3Annotations\";\n\n//import BrowserHistory from'react-router';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state={\n            loginStatus:''\n        }\n    }\n\n    componentDidMount() {\n\n        //Logged In as an Authorized Annotator(Health Researcher, Consultant, Officer)\n        if(window.location.pathname===\"/user/1\"){\n        sessionStorage.setItem(\"Username\",\"Ann\");\n        sessionStorage.setItem(\"Position\",\"Health Professional\");\n            this.setState({loginStatus:'loggedInHealthProffesional'})\n        }\n        //Logged In as Parent\n        else if(window.location.pathname===\"/user/2\"){\n            sessionStorage.setItem(\"Username\",\"Mat\");\n            sessionStorage.setItem(\"Position\",\"Parent\")\n            this.setState({loginStatus:'loggedInParent'})\n        }//Normal page without login(Guest Account)\n        else{\n            //Guest Account\n            /*sessionStorage.clear();\n            this.setState({loginStatus:''})*/\n        }\n\n    }\n\n    render() {\n        //localStorage.clear();\n        return (\n            <div>\n                <div>\n                    <Router>\n                        <NavigationBar />\n                        <Switch>\n                            <Route  path=\"/\" exact  component={Home}/>\n                            <Route  path=\"/user/\"   component={Home}/>\n                            <Route  path=\"/annotate\" exact component={Annotatemain}/>\n                            <Route  path=\"/annotateNotComplete\" exact  component={Analyze}/>\n                            <Route  path=\"/annotateComplete\" exact  component={Complete}/>\n                            <Route  path=\"/level1\"  component={Level1Annotations}/>\n                            <Route  path=\"/level2\"  component={Level2Annotations}/>\n                            <Route  path=\"/level3\"  component={Level3Annotations}/>\n                            <Route  path=\"/annotateVideo\"  component={MainVideo}/>\n                            <Route  path=\"/categories\" exact component={Category} />\n                            <Route  path=\"/categoriesm\" exact component={CategoryLevel1} />\n                            <Route  path=\"/categoriessub\" exact  component={CategoriesLevel2} />\n                            <Route  path=\"/categorieslevel\" exact component={Categorieslevel3} />\n                            <Route  path=\"/searchandretrive\" exact  component={SearchAndRetrieve} />\n\n                        </Switch>\n\n                    </Router>\n                    <br/>\n                    <br/><br/>\n                    <Footer/>\n\n                </div>\n                <br/>\n                <br/>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\reportWebVitals.js",[],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\navigation\\NavigationBar.js",["156","157","158"],"import React from 'react';\r\nimport {Nav,NavItem,Navbar,NavDropdown} from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport './style.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport userimg from \"../Images/user.png\"\r\nimport logo from \"../Images/logo.png\";\r\n\r\n\r\n\r\nfunction NavigationBar() {\r\n\r\n    return(\r\n        <div >\r\n            <br/>\r\n            {sessionStorage.getItem(\"Position\") === 'Health Professional' ?\r\n                <Nav className=\"fixed-top\" id=\"navd\">\r\n                    <h1 id=\"heading\"><img src={logo} className=\"mr-3\" alt=\"\"/>CSAAT - Video Analysis </h1>\r\n                    <Nav.Link id=\"kk\" style={{  textDecoration: 'none' }} href=\"https://CSAAT-WEB.com/user/1\"> CSAAT Home </Nav.Link>\r\n                    <Link to=\"/user/\" id=\"nn\" style={{  textDecoration: 'none' }}>Home</Link>\r\n                    <Link to=\"/annotate\" id=\"nn\" style={{  textDecoration: 'none' }}>Annotate</Link>\r\n                    <Link to=\"/categories\" id=\"nn\" style={{  textDecoration: 'none' }}>Category</Link>\r\n                    {/*<Nav.Link to=\"/searchandretrive\" id=\"nn\" style={{  textDecoration: 'none' }}>Search</Nav.Link>*/}\r\n                    {sessionStorage.getItem(\"Username\") === null?\r\n                        <div>\r\n                        </div>\r\n                        :<div id=\"logged1\">\r\n                            <img src={userimg}  alt=\"\" height=\"20\" width=\"20\"/>\r\n                            <h6>{sessionStorage.getItem(\"Username\")}</h6>\r\n                            <button id=\"logoutbtn\" onClick={onClickMethod}>Log Out</button>\r\n                        </div>}\r\n\r\n        </Nav>\r\n                :<Nav className=\"fixed-top\" id=\"navd\">\r\n                    <h1 id=\"heading\"><img src={logo} className=\"mr-3\" alt=\"\"/>CSAAT - Video Analysis </h1>>\r\n                    <br/>\r\n                    <Nav.Link id=\"kk\" style={{  textDecoration: 'none' }} href=\"https://CSAAT-WEB.com/user/1\"> CSAAT Home </Nav.Link>\r\n                    <Link to=\"/\" exact id=\"nn\" style={{ textDecoration: 'none' }}>Home</Link>\r\n                    <Link to=\"/searchandretrive\" id=\"nn\" style={{ textDecoration: 'none' }}>Search and Retrieve</Link>\r\n\r\n\r\n                    {sessionStorage.getItem(\"Username\") === null?\r\n                        <div>\r\n                        </div>\r\n                        :<div id=\"logged2\">\r\n                            <img src={userimg}  alt=\"\" height=\"20\" width=\"20\" />\r\n                            <h6>{sessionStorage.getItem(\"Username\")}</h6>\r\n                            <button id=\"logoutbtn\" className=\"h6\"  onClick={onClickMethod}>Log Out</button>\r\n\r\n\r\n                        </div>}\r\n\r\n\r\n                </Nav>}\r\n\r\n\r\n        </div>\r\n\r\n\r\n   );\r\n}\r\nfunction onClickMethod(){\r\n    sessionStorage.clear();\r\n    window.location.replace(\"https://CSAAT-WEB.com/\");\r\n\r\n}\r\nexport default NavigationBar;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\SearchAndRetrieve.js",[],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\CategoriesLevel3.js",["159"],"import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport {itIT} from \"@material-ui/core/locale\";\r\n\r\nclass CategoriesLevel3 extends Component{\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            mainCategories: [],\r\n            mainCategoriesLevel2: [],\r\n            cat2:[],\r\n            cat1_2:[\r\n                {\r\n                    cat1:{},\r\n                    cat2:{}\r\n                }\r\n            ],\r\n            select:{},\r\n            selectedTrue:false,\r\n            res:''\r\n\r\n        }\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n        this.selectlevel1=this.selectlevel1.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"http://127.0.0.1:8000/VideoAnalysis/Categories/\")\r\n            .then(response => {\r\n                this.setState({mainCategories: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n        axios.get(\"http://127.0.0.1:8000/VideoAnalysis/CategoriesThree/\")\r\n            .then(response => {\r\n                this.setState({cat2: response.data});\r\n                console.log(this.props)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n\r\n            })\r\n\r\n    }\r\n\r\n    handleInputChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.name=this.state.name;\r\n        //this.catid = this.state.catid;\r\n        //let res = this.l1categoryid.value;\r\n        let res2 = this.l1categoryid2.value;\r\n        //alert(res)\r\n        axios.post('http://127.0.0.1:8000/VideoAnalysis/CategoriesThree/', {\r\n            name: this.name,\r\n            category_level1: this.state.res,\r\n            category_level2: res2\r\n\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                window.location.reload();\r\n\r\n            })\r\n\r\n\r\n\r\n    }\r\n    selectlevel1(e){\r\n        e.preventDefault();\r\n        let res = this.l1categoryid.value;\r\n        //alert('hello '+res)\r\n        this.setState({res: res});\r\n\r\n        axios.get(\"http://127.0.0.1:8000/VideoAnalysis/Categories/\"+res)\r\n            .then(response => {\r\n                this.setState({select: response.data});\r\n                this.setState({selectedTrue: true});\r\n                //alert(this.state.select.name)\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n        axios.get(\"http://127.0.0.1:8000/VideoAnalysis/CategoriesTwo/?id=\"+res)\r\n            .then(response => {\r\n                this.setState({mainCategoriesLevel2: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n\r\n\r\n    }\r\n    onDeleteClick(id){\r\n        console.log(\"id:\"+id);\r\n        confirmAlert({\r\n            title: 'Confirm to Delete Level 3 Category',\r\n            message: 'Are you Sure you want to delete this Category?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => axios.delete(\"http://127.0.0.1:8000/VideoAnalysis/CategoriesThree/\" + id+ \"/\").then((response) => {\r\n                        window.location.replace(\"/categorieslevel\")\r\n                    })\r\n                },\r\n                {\r\n                    label: 'No',\r\n\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {cat2}=this.state;\r\n        const { mainCategories } = this.state;\r\n        const { selectedTrue } = this.state;\r\n        const { select } = this.state;\r\n        const { mainCategoriesLevel2 } = this.state;\r\n\r\n        let mainCategoriesList = mainCategories.length > 0\r\n            && mainCategories.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>{item.name}</option>\r\n                )\r\n            }, this);\r\n\r\n        let CategoriesLevel2List = mainCategoriesLevel2.length > 0\r\n            && mainCategoriesLevel2.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>{item.name}</option>\r\n                )\r\n            }, this);\r\n\r\n        return (\r\n            <div className=\"xx\">\r\n                <br/><br/><br/>\r\n                <h1 align=\"center\">Categories Management</h1>\r\n                <Button id=\"btnSubmit\"><Link to=\"/categories\"  style={{  textDecoration: 'none',color:'white'  }}>Category Main Page</Link></Button>\r\n                <div id=\"addmaincat\">\r\n                    <div>\r\n                        <br/>\r\n                        <h3 align=\"center\" id=\"headingSub\">Add Level 3 Categories</h3>\r\n                    </div>\r\n                    <div align=\"center\">\r\n                        <Form className=\"categoryclass\" onSubmit={this.onSubmit}>\r\n                            {selectedTrue === true ? <div>\r\n                                    <h5>Selected Level-1-Category: {select.name}</h5><br/>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Select Level 2 Category </Form.Label><br/>\r\n                                        <select id=\"selectmain2\" variant=\"primary\" ref = {(input)=> this.l1categoryid2 = input}>\r\n                                            >\r\n                                            {CategoriesLevel2List}\r\n                                        </select>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Level 3 Category</Form.Label>\r\n                                        <Form.Control type=\"text\"\r\n                                                      placeholder=\"Type Level 3 Category\"\r\n                                                      name=\"name\"\r\n                                                      onChange={this.handleInputChange}\r\n                                                      value={this.state.name}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button id=\"btnSubmit\" variant=\"primary\" type=\"submit\">\r\n                                        Add Category\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                : <div><Form.Group>\r\n                                    <Form.Label>Select Level 1 Category</Form.Label>\r\n                                    <select id=\"selectmain\" variant=\"primary\" ref = {(input)=> this.l1categoryid = input}>\r\n                                        >\r\n                                        {mainCategoriesList}\r\n                                    </select>\r\n                                </Form.Group>\r\n\r\n                                <Button id=\"btnSubmit\" variant=\"primary\" onClick={this.selectlevel1}>\r\n                                Select Level 1 Category\r\n                                </Button></div>\r\n\r\n                            }\r\n\r\n\r\n                        </Form>\r\n                        <br/><br/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"addmaincat\">\r\n                    <div>\r\n                        <br/>\r\n                        <h3 align=\"center\" id=\"headingSub\">Level 2 Categories</h3>\r\n                    </div>\r\n                    <div align=\"center\">\r\n                        <p>View Level-3-Categories</p>\r\n                        <div className=\"catelevel1dis\">\r\n                            {cat2.map((l1cat) => (\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"card text-center font-weight-bold\">\r\n                                        <div className=\"card-header text-black\">\r\n                                            Level-1-Catgeory ID:{l1cat.category_level1} <br/>\r\n                                            Level-2-Category ID:{l1cat.category_level2} <br/>\r\n                                            Level-3-Category ID:{l1cat.name}<br/>\r\n                                            <button className=\"btn-primary\" id=\"cardbtn\">Update</button>\r\n                                            <button className=\"btn-danger\"  onClick={() => this.onDeleteClick(l1cat.id)}> Delete </button>\r\n                                        </div></div>\r\n                                </div>\r\n                            ))}\r\n                            <br/><br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div align=\"center\">\r\n\r\n\r\n\r\n                    <br/><br/>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default CategoriesLevel3;\r\n\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Home\\Home.js",["160","161"],"import React, {Component} from 'react';\r\nimport './style.css';\r\nimport photo1 from \"../../Images/photo3.jpg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Home1 from \"./Home1\";\r\nimport userimg from \"../../Images/user.png\";\r\nimport VideoPlayer from \"react-video-js-player\";\r\n\r\nclass Home extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n            <div className=\"container\" id=\"xx\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center\"\r\n                         data-aos=\"fade-up\">\r\n                        <div>\r\n                            <div id=\"tt\">We create our tool to automatically detect Autism in\r\n                                an uploaded children’s video by using the latest\r\n                                Artificial Intelligence and Machine Learning technologies\r\n                                which will be gather data collection, by video recordings and\r\n                                annotating videos based on the categories by professional health\r\n                                users.</div>\r\n                            {/*<Link to=\"/searchandretrive\" id=\"homebtnid\" style={{  textDecoration: 'none' }} >Go to Search Page</Link>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"homedetails\" className=\"col-lg-6 order-1 order-lg-2 hero-img\" data-aos=\"fade-left\">\r\n                        <img src={photo1} className=\"img-fluid\" alt=\"\"/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n                {sessionStorage.getItem(\"Position\") === \"Health Professional\"?\r\n                    <div>\r\n\r\n                        <Home1/>\r\n                    </div>\r\n                    :<div>\r\n                    </div>}\r\n                {sessionStorage.getItem(\"Position\") !== \"Health Professional\"?\r\n                    <div>\r\n                        <div className=\"container\" id=\"categoriesHome\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 aos-init aos-animate\" data-aos=\"zoom-in\">\r\n                                    <div className=\"content pt-4 pt-lg-0\">\r\n                                        <VideoPlayer\r\n                                            controls={true}\r\n                                            src={'yy'}\r\n                                            width=\"500px\"\r\n                                            height=\"300px\"\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6 d-flex flex-column justify-contents-center aos-init aos-animate\"\r\n                                     data-aos=\"fade-left\">\r\n                                    <div className=\"content pt-4 pt-lg-0\">\r\n                                        <h3>Learn more about CSAAT - Video Analysis Tool</h3>\r\n                                        <ul>\r\n                                            <li><i className=\"icofont-check-circled\">How we collect Data?</i><br/>\r\n                                                The child’s video data will be collected by doing in room\r\n                                                activities done by according to the script written by professionals.\r\n                                                All the videos will be recorded with high quality and 360 degrees\r\n                                            </li><br/>\r\n                                            <li><i className=\"icofont-check-circled\">Who will be Analyzing and Annotating it?</i><br/>\r\n                                                Health Professionals will only have access to annotate a video.\r\n                                            </li><br/>\r\n                                            <li><i className=\"icofont-check-circled\">What will be the outcome?</i><br/>\r\n                                                Generate folder structure with videos annotations for a particular child's video.\r\n                                            </li><br/>\r\n                                            <li><i className=\"icofont-check-circled\">What will be the Outcome of this overall project?</i><br/>\r\n                                                Detect and generate a report, whether the child has autism or not.\r\n                                            </li><br/>\r\n                                        </ul>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    :<div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Home;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Home\\Home1.js",["162","163","164","165","166","167","168","169","170"],"import React, {Component} from 'react';\r\nimport './style.css';\r\nimport photo1 from \"../../Images/photo3.jpg\";\r\nimport VideoPlayer from 'react-video-js-player';\r\nimport {Link} from \"react-router-dom\";\r\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\r\nimport Analyze from \"../AnnotatingDisplay/Analyze\";\r\nimport Complete from \"../AnnotatingDisplay/Complete\";\r\nimport Switch from \"react-bootstrap/Switch\";\r\nimport ModalVideo from 'react-modal-video'\r\nimport {Button,ButtonToolbar} from \"react-bootstrap\";\r\nimport {AddVideoModel} from \"../videos/AddVideoModel\";\r\nimport {AddVideoModelAnnotate} from \"../videos/AddVideoModelAnnotate\";\r\n\r\nclass Home1 extends Component{\r\n\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            addModalShow:false,\r\n            addModalShowAnnotate:false,\r\n            video: {\r\n                src: \"http://www.example.com/path/to/video.mp4\",\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onPlayerReady(player){\r\n        console.log(\"Player is ready: \", player);\r\n        this.player = player;\r\n    }\r\n\r\n    onVideoPlay(duration){\r\n        console.log(\"Video played at: \", duration);\r\n    }\r\n\r\n    onVideoPause(duration){\r\n        console.log(\"Video paused at: \", duration);\r\n    }\r\n\r\n    onVideoTimeUpdate(duration){\r\n        console.log(\"Time updated: \", duration);\r\n    }\r\n\r\n    onVideoSeeking(duration){\r\n        console.log(\"Video seeking: \", duration);\r\n    }\r\n\r\n    onVideoSeeked(from, to){\r\n        console.log(`Video seeked from ${from} to ${to}`);\r\n    }\r\n\r\n    onVideoEnd(){\r\n        console.log(\"Video ended\");\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let addModalClose=()=>this.setState({addModalShow:false})\r\n        let addModalCloseAnnotate=()=>this.setState({addModalShowAnnotate:false})\r\n        return(\r\n            <div className=\"container\">\r\n                <div>\r\n                    <div className=\"container\" id=\"categoriesHome\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 aos-init aos-animate\" data-aos=\"zoom-in\">\r\n                                <div className=\"content pt-4 pt-lg-0\">\r\n                                    <VideoPlayer\r\n                                        controls={true}\r\n                                        src={this.state.video.src}\r\n                                        poster={this.state.video.poster}\r\n                                        width=\"500px\"\r\n                                        height=\"300px\"\r\n                                        onReady={this.onPlayerReady.bind(this)}\r\n                                        onPlay={this.onVideoPlay.bind(this)}\r\n                                        onPause={this.onVideoPause.bind(this)}\r\n                                        onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\r\n                                        onSeeking={this.onVideoSeeking.bind(this)}\r\n                                        onSeeked={this.onVideoSeeked.bind(this)}\r\n                                        onEnd={this.onVideoEnd.bind(this)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 d-flex flex-column justify-contents-center aos-init aos-animate\"\r\n                                 data-aos=\"fade-left\">\r\n                                <div className=\"content pt-4 pt-lg-0\">\r\n                                    <h3>Learn more about CSAAT - Video Analysis Tool</h3>\r\n                                    <ul>\r\n                                        <li><i className=\"icofont-check-circled\">How we collect Data?</i><br/>\r\n                                            The child’s video data will be collected by doing in room\r\n                                            activities done by according to the script written by professionals.\r\n                                            All the videos will be recorded with high quality and 360 degrees\r\n                                        </li><br/>\r\n                                        <li><i className=\"icofont-check-circled\">Who will be Analyzing and Annotating it?</i><br/>\r\n                                            Health Professionals will only have access to annotate a video.\r\n                                        </li><br/>\r\n                                        <li><i className=\"icofont-check-circled\">What will be the outcome?</i><br/>\r\n                                            Generate folder structure with videos annotations for a particular child's video.\r\n                                        </li><br/>\r\n                                        <li><i className=\"icofont-check-circled\">What will be the Outcome of this overall project?</i><br/>\r\n                                            Detect and generate a report, whether the child has autism or not.\r\n                                        </li><br/>\r\n                                    </ul>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n\r\n                    <div className=\"container\" id=\"section3\">\r\n                        <div className=\"section-title aos-init aos-animate\" data-aos=\"fade-up\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row aos-init aos-animate\" data-aos=\"zoom-in\">\r\n                                    <div className=\"col-lg-9 text-center text-lg-left\">\r\n                                        <h3>Category</h3>\r\n                                        <p> Categorizing the Video Annotations into 3 Categories.\r\n                                            All the categories are managed only by Level-1 health professionals</p>\r\n                                    </div>\r\n                                    <div className=\"col-lg-3 cta-btn-container text-center\">\r\n                                        <button id=\"button4\" onClick={()=>this.setState({addModalShow:true})}>Watch Demo</button>\r\n\r\n                                        <AddVideoModel\r\n                                        show={this.state.addModalShow}\r\n                                        onHide={addModalClose}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div\r\n                                className=\"col-md-6 col-lg-4 d-flex align-items-stretch mb-5 mb-lg-0 aos-init aos-animate\"\r\n                                data-aos=\"zoom-in\">\r\n                                <div className=\"icon-box\">\r\n                                    <div className=\"icon\"><i className=\"bx bxl-dribbble\"></i></div>\r\n                                    <h4 className=\"title\"><Link to=\"/categoriesm\"  style={{  textDecoration: 'none' }}>Level 1 Category</Link></h4>\r\n                                    <p className=\"description\">A video can have a 2 or more main categories</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"col-md-6 col-lg-4 d-flex align-items-stretch mb-5 mb-lg-0 aos-init aos-animate\"\r\n                                data-aos=\"zoom-in\" data-aos-delay=\"100\">\r\n                                <div className=\"icon-box icon-box-cyan\">\r\n                                    <div className=\"icon\"><i className=\"bx bx-file\"></i></div>\r\n                                    <h4 className=\"title\"><Link to=\"/categoriessub\"  style={{  textDecoration: 'none' }}>Level 2 Category</Link></h4>\r\n                                    <p className=\"description\">A trimmed video under a main category can have a 2 or more subcategories</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"col-md-6 col-lg-4 d-flex align-items-stretch mb-5 mb-lg-0 aos-init aos-animate\"\r\n                                data-aos=\"zoom-in\" data-aos-delay=\"200\">\r\n                                <div className=\"icon-box icon-box-green\">\r\n                                    <div className=\"icon\"><i className=\"bx bx-tachometer\"></i></div>\r\n                                    <h4 className=\"title\"><Link to=\"/categorieslevel\"  style={{  textDecoration: 'none' }}>Level 3 Category</Link></h4>\r\n                                    <p className=\"description\">A trimmed video under a main-sub category has a 2 or more level 3 categories</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container\">\r\n                                <div id=\"categoriesHome\">\r\n                                <div className=\"row aos-init aos-animate\" data-aos=\"zoom-in\">\r\n                                    <div className=\"col-lg-9 text-center text-lg-left\">\r\n                                        <h3>Annotate</h3>\r\n                                        <div className=\"row\">\r\n                                            <div\r\n                                                className=\"col-md-3 col-lg-5 d-flex align-items-stretch mb-5 mb-lg-0 aos-init aos-animate\"\r\n                                                data-aos=\"zoom-in\" data-aos-delay=\"100\">\r\n                                                <div className=\"icon-box icon-box-cyan\">\r\n                                                    <div className=\"icon\"><i className=\"bx bx-file\"></i></div>\r\n                                                    <h4 className=\"title\">Yet to be Annotated Videos</h4>\r\n                                                    <p className=\"description\"></p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div\r\n                                                className=\"col-md-3 col-lg-5 d-flex align-items-stretch mb-5 mb-lg-0 aos-init aos-animate\"\r\n                                                data-aos=\"zoom-in\" data-aos-delay=\"200\">\r\n                                                <div className=\"icon-box icon-box-green\">\r\n                                                    <div className=\"icon\"><i className=\"bx bx-tachometer\"></i></div>\r\n                                                    <h4 className=\"title\">Annotation Completed Videos</h4>\r\n                                                    <p className=\"description\"></p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        <br/><br/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-3 cta-btn-container text-center\">\r\n                                        <button className=\"videonavmainbtn\"><Link to=\"/annotate\"  style={{  textDecoration: 'none' }}>Go to Page</Link></button>\r\n                                        <button id=\"button4\" onClick={()=>this.setState({addModalShowAnnotate:true})}>Watch Demo</button>\r\n                                        <AddVideoModelAnnotate\r\n                                            show={this.state.addModalShowAnnotate}\r\n                                            onHide={addModalCloseAnnotate}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                    <br/><br/>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Home1;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\navigation\\Footer.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React, {Component} from 'react';\r\nimport './style.css';\r\n/*The method needs to check with the format*/\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return(<div>\r\n            <footer id=\"footer\">\r\n                <div className=\"footer-top\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-lg-3 col-md-6\">\r\n                                <div className=\"footer-info\">\r\n                                    <h3>CSAAT</h3>\r\n                                    <p>\r\n                                        A108 Adam Street <br/>\r\n                                        NY 535022, USA<br/>\r\n                                        <strong>Phone:</strong> +1 5589 55488 55<br/>\r\n                                        <strong>Email:</strong> info@example.com<br/>\r\n                                    </p>\r\n                                    <div className=\"social-links mt-3\">\r\n                                        <a href=\"#\" className=\"twitter\"><i className=\"bx bxl-twitter\"></i></a>\r\n                                        <a href=\"#\" className=\"facebook\"><i className=\"bx bxl-facebook\"></i></a>\r\n                                        <a href=\"#\" className=\"instagram\"><i className=\"bx bxl-instagram\"></i></a>\r\n                                        <a href=\"#\" className=\"google-plus\"><i className=\"bx bxl-skype\"></i></a>\r\n                                        <a href=\"#\" className=\"linkedin\"><i className=\"bx bxl-linkedin\"></i></a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-2 col-md-6 footer-links\">\r\n                                <h4>Useful Links</h4>\r\n                                <ul>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Home</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">About us</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Services</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Terms of service</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Privacy policy</a></li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-3 col-md-6 footer-links\">\r\n                                <h4>Our Services</h4>\r\n                                <ul>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Web Design</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Web Development</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Product Management</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Marketing</a></li>\r\n                                    <li><i className=\"bx bx-chevron-right\"></i> <a href=\"#\">Graphic Design</a></li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-4 col-md-6 footer-newsletter\">\r\n                                <h4>Our Newsletter</h4>\r\n                                <p>Tamen quem nulla quae legam multos aute sint culpa legam noster magna</p>\r\n                                <form action=\"\" method=\"post\">\r\n                                    <input type=\"email\" name=\"email\"/><input type=\"submit\" value=\"Subscribe\"/>\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"copyright\">\r\n                        © Copyright <strong><span>Scaffold</span></strong>. All Rights Reserved\r\n                    </div>\r\n                    <div className=\"credits\">\r\n\r\n                        Designed by <a href=\"https://bootstrapmade.com/\">BootstrapMade</a>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </div>);\r\n    }\r\n}\r\nexport default Footer;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\videos\\AddVideoModel.js",["186","187","188","189"],"import React,{Component} from 'react';\r\nimport {Modal,Button,Row, Col,Form} from 'react-bootstrap';\r\nimport VideoPlayer from \"react-video-js-player\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport class AddVideoModel extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            video: {\r\n                src: \"http://www.example.com/path/to/video.mp4\",\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onPlayerReady(player){\r\n        console.log(\"Player is ready: \", player);\r\n        this.player = player;\r\n    }\r\n\r\n    onVideoPlay(duration){\r\n        console.log(\"Video played at: \", duration);\r\n    }\r\n\r\n    onVideoPause(duration){\r\n        console.log(\"Video paused at: \", duration);\r\n    }\r\n\r\n    onVideoTimeUpdate(duration){\r\n        console.log(\"Time updated: \", duration);\r\n    }\r\n\r\n    onVideoSeeking(duration){\r\n        console.log(\"Video seeking: \", duration);\r\n    }\r\n\r\n    onVideoSeeked(from, to){\r\n        console.log(`Video seeked from ${from} to ${to}`);\r\n    }\r\n\r\n    onVideoEnd(){\r\n        console.log(\"Video ended\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Managing Categories Demo Video\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4></h4>\r\n                   <div className=\"container\">\r\n                       <div className=\"content pt-4 pt-lg-0\">\r\n                           <VideoPlayer\r\n                               controls={true}\r\n                               src={this.state.video.src}\r\n                               poster={this.state.video.poster}\r\n                               width=\"500px\"\r\n                               height=\"300px\"\r\n                               onReady={this.onPlayerReady.bind(this)}\r\n                               onPlay={this.onVideoPlay.bind(this)}\r\n                               onPause={this.onVideoPause.bind(this)}\r\n                               onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\r\n                               onSeeking={this.onVideoSeeking.bind(this)}\r\n                               onSeeked={this.onVideoSeeked.bind(this)}\r\n                               onEnd={this.onVideoEnd.bind(this)}\r\n                           />\r\n                       </div>\r\n\r\n                   </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button><Link to=\"/categories\" id=\"nn\" style={{  textDecoration: 'none',color:'white' }}>Go to Category</Link></Button>\r\n                    <Button onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\CategoryLevel1.js",["190","191","192","193"],"import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './style.css';\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport {categoriesAPI} from '../../configs/config';\r\n\r\nclass CategoryLevel1 extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            cat: []\r\n\r\n        }\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        axios.get(categoriesAPI)\r\n            .then(response => {\r\n                this.setState({cat: response.data});\r\n                console.log(this.props)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n\r\n            })\r\n    }\r\n   /* submitDelete = () => {\r\n        confirmAlert({\r\n            title: 'Confirm to submit',\r\n            message: 'Are you sure to do this.',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => alert('Click Yes')\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => alert('Click No')\r\n                }\r\n            ]\r\n        });\r\n    };*/\r\n\r\n    handleInputChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.name=this.state.name;\r\n        axios.post(categoriesAPI, {\r\n            name: this.name\r\n\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                window.location.reload();\r\n\r\n            })\r\n\r\n\r\n    }\r\n    onDeleteClick(id){\r\n        console.log(\"id:\"+id);\r\n        confirmAlert({\r\n            title: 'Confirm to Delete Level 1 Category',\r\n            message: 'Are you Sure you want to delete this Category?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => axios.delete( categoriesAPI+ id+ \"/\").then((response) => {\r\n                                    window.location.replace(\"/categoriesm\")\r\n                    })\r\n                },\r\n                {\r\n                    label: 'No',\r\n\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n    const { tt } = this.state;\r\n    const {cat}=this.state;\r\n    return (\r\n        <div className=\"xx\"><br/><br/><br/>\r\n            <h1 align=\"center\">Categories Management</h1>\r\n            <Button id=\"btnSubmit\"><Link to=\"/categories\"  style={{  textDecoration: 'none', color:'white'  }}>Category Main Page</Link></Button>\r\n        <div id=\"addmaincat\">\r\n            <div>\r\n                <br/>\r\n                <h3 align=\"center\" id=\"headingSub\">Add Level 1 Categories</h3>\r\n            </div>\r\n            <div align=\"center\">\r\n                <Form className=\"categoryclass\" onSubmit={this.onSubmit} >\r\n                    <Form.Group>\r\n                        <Form.Label>Main Category</Form.Label>\r\n                        <Form.Control type=\"text\"\r\n                                      placeholder=\"Type Main Category\"\r\n                                      onChange={this.handleInputChange}\r\n                                      value={this.state.name}\r\n                                      name=\"name\"\r\n\r\n                        />\r\n                    </Form.Group>\r\n                    <Button id=\"btnSubmit\" variant=\"primary\" type=\"submit\">\r\n                        Add Category\r\n                    </Button>\r\n                </Form>\r\n                <br/><br/>\r\n            </div>\r\n        </div>\r\n\r\n            <div id=\"addmaincat\">\r\n                <div>\r\n                    <br/>\r\n                    <h3 align=\"center\" id=\"headingSub\">View Level 1 Categories</h3>\r\n                </div>\r\n                <div align=\"center\">\r\n\r\n                    <div className=\"catelevel1dis\">\r\n                        {cat.map((l1cat) => (\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card text-center font-weight-bold\">\r\n                                    <div className=\"card-header text-black\">\r\n                                <tr className=\"row\">{l1cat.name}\r\n                                <button className=\"btn-primary\" id=\"cardbtn\">Update</button>\r\n                                <button className=\"btn-danger\"  onClick={() => this.onDeleteClick(l1cat.id)}> Delete </button></tr>\r\n                                    </div></div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <br/><br/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n} }\r\n\r\n\r\n\r\n\r\nexport default CategoryLevel1;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\CategoriesLevel2.js",["194"],"import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport {categoriesAPI} from '../../configs/config';\r\nimport {categoriesLevel2API} from '../../configs/config';\r\n\r\nclass CategoriesLevel2 extends Component{\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            mainCategories: [],\r\n            cat2:[]\r\n\r\n        }\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        axios.get(categoriesAPI)\r\n            .then(response => {\r\n                this.setState({mainCategories: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n        axios.get(categoriesLevel2API)\r\n            .then(response => {\r\n                this.setState({cat2: response.data});\r\n                console.log(this.props)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n\r\n            })\r\n\r\n    }\r\n\r\n    handleInputChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.name=this.state.name;\r\n        //this.catid = this.state.catid;\r\n        let res = this.l1categoryid.value;\r\n        //alert(res)\r\n        axios.post(categoriesLevel2API, {\r\n            name: this.name,\r\n            category_level1: res\r\n\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                window.location.reload();\r\n\r\n            })\r\n\r\n\r\n\r\n    }\r\n    onSubmit123(id){\r\n\r\n    }\r\n    onDeleteClick(id){\r\n        console.log(\"id:\"+id);\r\n        confirmAlert({\r\n            title: 'Confirm to Delete Level 2 Category',\r\n            message: 'Are you Sure you want to delete this Category?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => axios.delete(categoriesLevel2API + id+ \"/\").then((response) => {\r\n                        window.location.replace(\"/categoriessub\")\r\n                    })\r\n                },\r\n                {\r\n                    label: 'No',\r\n\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { tt } = this.state;\r\n        const {cat2}=this.state;\r\n        const { mainCategories } = this.state;\r\n\r\n        let mainCategoriesList = mainCategories.length > 0\r\n            && mainCategories.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>{item.name}</option>\r\n                )\r\n            }, this);\r\n\r\n\r\n        return (\r\n            <div className=\"xx\">\r\n                <br/><br/><br/>\r\n                <h1 align=\"center\">Categories Management</h1>\r\n                <Button id=\"btnSubmit\"><Link to=\"/categories\"  style={{  textDecoration: 'none',color:'white'  }}>Category Main Page</Link></Button>\r\n                <div id=\"addmaincat\">\r\n                    <div>\r\n                        <br/>\r\n                        <h3 align=\"center\" id=\"headingSub\">Add Level 2 Categories</h3>\r\n                    </div>\r\n                    <div align=\"center\">\r\n                        <Form className=\"categoryclass\" onSubmit={this.onSubmit}>\r\n                            <Form.Group>\r\n                               <Form.Label>Select Level 1 Category </Form.Label>\r\n                               <select id=\"selectmain\" variant=\"primary\" ref = {(input)=> this.l1categoryid = input}>\r\n                                  >\r\n                                   {mainCategoriesList}\r\n                               </select>\r\n                           </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Level 2 Category</Form.Label>\r\n                                <Form.Control type=\"text\"\r\n                                              placeholder=\"Type Level 2 Category\"\r\n                                              name=\"name\"\r\n                                              onChange={this.handleInputChange}\r\n                                              value={this.state.name}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button id=\"btnSubmit\" variant=\"primary\" type=\"submit\">\r\n                                Add Category\r\n                            </Button>\r\n                        </Form>\r\n                        <br/><br/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"addmaincat\">\r\n                    <div>\r\n                        <br/>\r\n                        <h3 align=\"center\" id=\"headingSub\">Level 2 Categories</h3>\r\n                    </div>\r\n                    <div align=\"center\">\r\n                        <p>View Level-2-Categories</p>\r\n                        <div className=\"catelevel1dis\">\r\n                            {cat2.map((l1cat) => (\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"card text-center font-weight-bold\">\r\n                                        <div className=\"card-header text-black\">\r\n                                            Level-1-Catgeory: ID: {l1cat.category_level1}  <br/>\r\n                                            Level-2-Category:{l1cat.name}<br/>\r\n                                            <button className=\"btn-primary\" id=\"cardbtn\">Update</button>\r\n                                            <button className=\"btn-danger\"  onClick={() => this.onDeleteClick(l1cat.id)}> Delete </button>\r\n                                        </div></div>\r\n                                </div>\r\n                            ))}\r\n                            <br/><br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div align=\"center\">\r\n\r\n\r\n\r\n                    <br/><br/>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default CategoriesLevel2;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\Categaries\\Category.js",[],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\MainVideo.js",["195","196"],"import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport './style.css';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\nimport ViewAnnotations from \"./ViewAnnotations\";\r\nimport {createfolder,videoRetrievefromUpload,categoriesAPI} from \"../../configs/config\";\r\nimport {AddVideoModel} from \"../videos/AddVideoModel\";\r\nimport {MarkAnnotateCompleteModel} from \"../markcomplete/MarkAnnotateCompleteModel\";\r\n\r\nclass MainVideo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            id:qs.parse(this.props.location.search, { ignoreQueryPrefix: true })._k,\r\n            url:'',\r\n            name:'',\r\n            mainCategories: [],\r\n            level1cat:'',\r\n            LoadedFrames:[],\r\n            LoadedAnnotatedDetails:[],\r\n            loadedvideo:{},\r\n            xvariable:'',\r\n            open:false,\r\n            addModalShow:false,\r\n        }\r\n        if (this.state.id===\"\"){\r\n            this.state.id=localStorage.getItem(\"videoid\")\r\n        }\r\n        this.onAnnotationBar=this.onAnnotationBar.bind(this);\r\n        this.open_Annotated_Video=this.open_Annotated_Video.bind(this);\r\n        this.open_Annotated_Video_close=this.open_Annotated_Video_close.bind(this);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(createfolder + \"?uniquename=\"+this.state.id)\r\n            .then(response => {\r\n                alert(\"Successfully created the Unique Child Folder. You can start AnnotatingDisplay.\")\r\n                localStorage.setItem(\"videoid\",this.state.id)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n\r\n            })\r\n        //Retrieve video data - uploaded videos\r\n        axios.get(videoRetrievefromUpload + this.state.id + '/')\r\n            .then(response => {\r\n                this.setState({\r\n                    url: response.data.video,\r\n                    name:response.data.name,\r\n                }\r\n                )\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })\r\n\r\n        //Retrieve level 1 categories\r\n        axios.get(categoriesAPI)\r\n            .then(response => {\r\n                this.setState({mainCategories: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n\r\n    }\r\n    handleInputChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onAnnotationBar(e){\r\n        e.preventDefault();\r\n        //alert(\"xxx\");\r\n        let idForSelected = this.menu.value.valueOf();\r\n        this.id=this.state.id;\r\n\r\n        //this.setState({LoadedFrames:  });\r\n        this.setState({\r\n            LoadedFrames: this.state.LoadedFrames.concat(idForSelected)\r\n        })\r\n        window.open('/level1/id?k='+this.id+'idcat_'+idForSelected,'','height=800,width=800');\r\n\r\n    }\r\n    open_Annotated_Video(){\r\n        this.setState({open:true})\r\n    }\r\n    open_Annotated_Video_close(){\r\n        this.setState({open:false})\r\n    }\r\n    render() {\r\n        let {id} = this.state;\r\n        let {url} = this.state;\r\n        let {name} = this.state;\r\n        let {open} = this.state;\r\n\r\n        let addModalClose=()=>this.setState({addModalShow:false})\r\n\r\n        const { mainCategories } = this.state;\r\n        let mainCategoriesList = mainCategories.length > 0\r\n            && mainCategories.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>{item.name}</option>\r\n                )\r\n            }, this);\r\n        return (\r\n            <div><br/>\r\n                <br/><h1> Video Annotating </h1>\r\n                <div id=\"main\">\r\n                    <div id=\"right\"><br/><br/>\r\n                    <h3>Child Specification</h3>\r\n                        <button className=\"btn-dark\" onClick={()=>this.setState({addModalShow:true})}> Mark Annotation Complete </button>\r\n                        <MarkAnnotateCompleteModel\r\n                            show={this.state.addModalShow}\r\n                            onHide={addModalClose}\r\n                        />\r\n                    </div>\r\n                    <div><br/><br/>\r\n                    <h3>Child's Video</h3><h4> Video ID : {id} <br/> Video url: {url} <br/> Name: {name} </h4>\r\n                        <video\r\n                            controls={true}\r\n                            width=\"800px\"\r\n                            height=\"450px\"\r\n                            src={url}\r\n                        />\r\n\r\n                </div>\r\n                <br/><br/>\r\n                    <div> <br/><br/><h3>Select Level 1 Category</h3></div>\r\n                    <div align=\"left\">\r\n                        <Form className=\"row\" onSubmit={this.onAnnotationBar}>\r\n                            <Form.Group>\r\n                                <Form.Label>Select Level 1 Category </Form.Label>\r\n                                <select id=\"level1cat\" variant=\"primary\" name=\"level1cat\" ref = {(input)=> this.menu = input}>\r\n                                    {mainCategoriesList}\r\n                                </select>\r\n                            </Form.Group>\r\n                            <Button id=\"bt\" variant=\"primary\" type=\"submit\">\r\n                                Start Annotating\r\n                            </Button>\r\n                        </Form>\r\n                        <br/><br/>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"\">\r\n                        <h1 align=\"center\"> Annotations Specification </h1>\r\n                        Unique Folder ID: Childvideo/{id}\r\n                        <div align=\"center\">\r\n\r\n                            <button className=\"openann\" onClick={this.open_Annotated_Video}>Load Annotated Videos</button>\r\n                            <button className=\"openann\" onClick={this.open_Annotated_Video_close}>Close Annotated Page</button>\r\n\r\n                            {open ? <ViewAnnotations id={id}/>\r\n                            : null}\r\n\r\n                    </div>\r\n                    <br/><br/><br/>\r\n\r\n                </div>\r\n                </div></div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default MainVideo;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\Level1Annotations.js",["197","198"],"import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport VideoTrimmer from \"./VideoTrimmer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {videoRetrievefromUpload,categoriesAPI,videoUpload} from \"../../configs/config\";\r\n\r\n\r\n\r\n\r\nclass Level1Annotations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            id:qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).k,\r\n            mainCategories: {},\r\n            idv:'',\r\n            url:'',\r\n            name:'',\r\n            trimstate:'Stop',\r\n        }\r\n\r\n        this.trimmer = this.trimmer.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener('beforeunload', this.keepOnPage);\r\n        this.id=this.state.id;\r\n        let sentence = this.id;\r\n        sentence.split(\"_\");\r\n        const [idv, idcat] = sentence.split('_');\r\n\r\n        const editedText = idv.slice(0, -5)\r\n        this.setState({idv: editedText});\r\n        //alert(\"edited text\"+ editedText)\r\n        axios.get(categoriesAPI +idcat+'/')\r\n            .then(response => {\r\n                this.setState({mainCategories: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n        sessionStorage.setItem(sentence,sentence);\r\n\r\n        //Retrieve video data - uploaded videos\r\n        //alert('http://127.0.0.1:8000/VideoAnalysis/uploadretrieve/'+editedText)\r\n        axios.get(videoRetrievefromUpload + editedText )\r\n            .then(response => {\r\n                this.setState({\r\n                        url: response.data.video,\r\n                        name:response.data.name,\r\n                    }\r\n                )\r\n                //alert(this.state.url+\"hello aa level 1 ann.\")\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        confirmAlert({\r\n                title: 'Confirm Closing Window.',\r\n                message: 'Navigation to other components are disabled in this Window.Are you Sure you want Close this Window?',\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes',\r\n                        onClick: () => window.close()\r\n                    },\r\n                    {\r\n                        label: 'No',\r\n                        onClick: () =>this.props.history.push('/level1/id?k='+sessionStorage.getItem(this.state.id))\r\n\r\n                    }\r\n                ]\r\n            });\r\n    }\r\n    trimmer(){\r\n        this.setState({\r\n                trimstate: 'start'\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        let {idv} = this.state;\r\n        let {mainCategories} = this.state;\r\n        let {url} = this.state;\r\n        let {name} = this.state;\r\n        let {trimstate}=this.state;\r\n        return (\r\n            <div>\r\n                <div><br/><br/><br/><br/>\r\n                    <div id=\"main\">\r\n                        <Typography variant=\"h6\"> Video ID : {idv} <br/> Level-1-Category : {mainCategories.name} </Typography>\r\n                        <br/><br/>\r\n                        <div align=\"center\">\r\n                            <button  onClick={this.trimmer} className=\"btn-dark\">\r\n                                Open Trimmer\r\n                            </button><br/><br/>\r\n                            {trimstate==='start' ?\r\n                                <div>\r\n                                    <VideoTrimmer childId = {idv} name={name} level={1} selectcategory={mainCategories.id} url={url} />\r\n\r\n                                </div>\r\n                                : null}\r\n\r\n                        </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <br/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Level1Annotations;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\AnnotationBar.js",[],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\VideoTrimmer.js",["199","200"],"import React, {Component} from 'react';\r\nimport {createFFmpeg, fetchFile} from '@ffmpeg/ffmpeg';\r\nimport video1 from '../../Video_Store/ChildVideo1.mp4';\r\nimport ReactPlayer from 'react-player';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './style.css';\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport axios from \"axios\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport {videoUpload} from \"../../configs/config\";\r\n\r\nconst ffmpeg = createFFmpeg({log: true});\r\n\r\n/*Video trimming using ffempg. Its a open source library, react provides a package as well.\r\n* Do not remove video1 , which is retrieving from Video_Store\r\n* It is an essential\r\n*\r\n*\r\n* */\r\n\r\nclass VideoTrimmer extends Component {\r\n\r\n   static get propTypes() {\r\n        return {\r\n            childId: PropTypes.number,\r\n            level: PropTypes.number,\r\n            selectcategory: PropTypes.number,\r\n            url:PropTypes.string,\r\n            name:PropTypes.string,\r\n        }\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.player = React.createRef();\r\n        //this.myinput = React.createRef();\r\n        console.log(this.props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            video: video1,\r\n            gif: '',\r\n            currentTime: 0,\r\n            markedStartTime:'00:00',\r\n            markedEndTime:'00:00',\r\n            description:'',\r\n            childId: this.props.childId,\r\n            selectedvideo:null,\r\n            vurl:this.props.url,\r\n            name:this.props.name,\r\n            selectedcategory:this.props.selectcategory,\r\n            time:'',\r\n\r\n        }\r\n        //alert(\"prop types\"+this.props.childId)\r\n        this.onChange = this.onChange.bind(this);\r\n        this.settimeStart = this.settimeStart.bind(this);\r\n        this.settimeEnd = this.settimeEnd.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.loadvideo = this.loadvideo.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        //alert(this.state.childId)\r\n        this.loadvideo();\r\n        /*const idtoInt = 'http://127.0.0.1:8000/VideoAnalysis/uploadretrieve/' + parseInt(this.state.childId)\r\n        axios.get(idtoInt)\r\n            .then(response => {\r\n                    this.setState({\r\n                            vurl: response.data.video,\r\n                            name:response.data.name,\r\n                        }\r\n                    )\r\n                console.log(\"displaying data\"+response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })*/\r\n\r\n    }\r\n    loadvideo(){\r\n       /* const idtoInt = 'http://127.0.0.1:8000/VideoAnalysis/uploadretrieve/' + parseInt(this.state.childId)\r\n        axios.get(idtoInt)\r\n            .then(response => {\r\n                this.setState({\r\n                        vurl: response.data.video,\r\n                        name:response.data.name,\r\n                    }\r\n                )\r\n                console.log(\"displaying data\"+response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })*/\r\n        //this.props.history.push('/level1/id?k='+sessionStorage.getItem(this.state.id))\r\n    }\r\n\r\n    async loadx(){\r\n        await ffmpeg.load();\r\n        this.setState({ready: true});\r\n    }\r\n\r\n    async convertToTrimmed() {\r\n        // Write the file to memory\r\n        alert(\"Trimming Video........... \\n This may take few seconds or minutes depending the size of the given trimming video.\\n Once it is complete,the trimmed video will be loaded to below in the page.\");\r\n        await ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(this.state.vurl));\r\n\r\n        // Run the FFMpeg command\r\n        //-i input.mp4 -ss 00:00:05 -c copy -to 00:00:07 sliced-output.mp4\r\n       await ffmpeg.run('-i', 'test.mp4', '-ss', this.state.markedStartTime, '-c', 'copy', '-to', this.state.markedEndTime, 'out.mp4');\r\n\r\n        // Read the result\r\n        const data = ffmpeg.FS('readFile', 'out.mp4');\r\n        //console.log(\"here goes data...\" + data);\r\n\r\n        // Create a URL\r\n        const url = URL.createObjectURL(new Blob([data.buffer], {type: 'video/mp4'}));\r\n        //const filenew = await fetchFile(data);\r\n        const file = new File([data], \"out.mp4\")\r\n       // const file = new File([new Blob(data)], {type:\"video/mp4\"});\r\n\r\n        console.log(\"ttttttttt\"+ file);\r\n\r\n        this.setState({gif: url});\r\n        this.setState({selectedvideo: file});\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onChange(e){\r\n        if(!ffmpeg.isLoaded()){\r\n        this.loadx().then(r =>\r\n            this.convertToTrimmed()\r\n        );\r\n        }else{\r\n            confirmAlert({\r\n                title: 'Trimmed Video Status',\r\n                message: 'You have already trim a video. If need to trim again please re-load the page.',\r\n                buttons: [\r\n                    {\r\n                        label: 'OK',\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n    format(seconds){\r\n        if (isNaN(seconds)) {\r\n            return `00:00`;\r\n        }\r\n        const date = new Date(seconds * 1000);\r\n        const hh = date.getUTCHours();\r\n        const mm = date.getUTCMinutes();\r\n        const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n        if (hh) {\r\n            return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n        }\r\n        return `${mm}:${ss}`;\r\n    };\r\n\r\n    settimeStart(){\r\n\r\n        if(this.state.time!=='') {\r\n            this.setState({markedStartTime: this.state.time});\r\n            this.setState({time: ''});\r\n\r\n        }\r\n        else{\r\n        const timeStart = this.format(this.player.current.getCurrentTime());\r\n        this.setState({markedStartTime: timeStart});\r\n        }\r\n\r\n    }\r\n    settimeEnd(){\r\n\r\n\r\n        if(this.state.time!=='') {\r\n            this.setState({markedEndTime: this.state.time});\r\n            this.setState({time: ''});\r\n\r\n        }\r\n        else{\r\n            const timeEnd = this.format(this.player.current.getCurrentTime());\r\n            this.setState({markedEndTime: timeEnd});\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange(event){\r\n        this.setState({\r\n            description: event.target.value\r\n        })\r\n    }\r\n\r\n    handleInput(event){\r\n        this.setState({\r\n            time: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n       e.preventDefault()\r\n        let res = this.uploadFile(this.state.selectedvideo);\r\n        //console.log(res.data);\r\n    }\r\n    //async axios\r\n   uploadFile(file){\r\n\r\n        const formData = new FormData();\r\n        formData.append('childid',this.props.childId)\r\n        formData.append('description',this.state.description)\r\n        formData.append('level',this.props.level)\r\n        formData.append('category',this.props.selectcategory)\r\n        formData.append('video',this.state.selectedvideo)\r\n\r\n        return  axios.post(videoUpload, formData,{\r\n            headers: {\r\n               // contentType: \"multipart/form-data\", // important\r\n\r\n            }\r\n        })\r\n            .then(function (response) {\r\n            //console.log(response);\r\n            //window.location.reload();\r\n            alert('Successfully Saved the Data.\\n Click *Load Annotated Videos* Button to view the Results.')\r\n                window.close()\r\n        })\r\n            .catch((error) => {\r\n                alert('Error in Saving')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {vurl} = this.state;\r\n        const {childId} = this.state;\r\n        const {name} = this.state;\r\n        const {video} = this.state;\r\n        const {gif} = this.state;\r\n        const {markedStartTime} = this.state;\r\n        const {markedEndTime} = this.state\r\n        const {selectedcategory} = this.state;\r\n        return  (\r\n                <div className=\"App\">\r\n                    ID: {childId}<br/>\r\n                    Child Name: {name}<br/>\r\n                    Selected Category ID: {selectedcategory}<br/>\r\n                    Video url: {vurl}<br/>\r\n                    <br/><br/><br/>\r\n                    <br/><br/>\r\n                    {\r\n                        video &&\r\n                        <Container>\r\n                            <div className=\"PlayerWrapper\">\r\n                                 <br/>\r\n                        <ReactPlayer\r\n                            url={vurl}\r\n                            controls={true}\r\n                            ref={this.player}\r\n\r\n                        />\r\n                                <div className=\"ControlWrapper\">\r\n                                    <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\" style={{padding:16}}>\r\n                                        <Grid item>\r\n                                            Manual Enter Time:\r\n                                            <input type=\"text\"\r\n                                                   id=\"time\"\r\n                                                   name=\"time\"\r\n                                                   placeholder=\"00:00\"\r\n\r\n                                                   value={this.state.time}\r\n                                                   onChange={this.handleInput}\r\n\r\n                                            /><br/>\r\n                                            <button onClick={this.settimeStart} id=\"trimpoints\">Mark Trim Start Point\r\n                                            </button>\r\n                                            <button onClick={this.settimeEnd} id=\"trimpoints\">Mark Trim End Point\r\n                                            </button>\r\n                                            <div className=\"Trim Timming\">\r\n                                                Selected Times for Trimming Videos<br/>\r\n                                                Selected Trim Start:{markedStartTime} <br/>\r\n                                                Selected Trim End:  {markedEndTime} <br/>\r\n                                                <button onClick={this.onChange} id=\"trimVideo\">Trim Video</button>\r\n\r\n                                            </div>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Container>\r\n\r\n                    }\r\n                    <br/>\r\n\r\n                    <div className=\"trimmedResults\">\r\n                        <Typography variant=\"h6\"> Trimmed Video Results </Typography>\r\n                        <br/><br/>\r\n                    {gif &&\r\n                    <ReactPlayer controls={true} url={gif} />}\r\n                    { gif &&\r\n                    <Form className=\"trimmedResults2\" onSubmit={this.onSubmit} >\r\n                        <Form.Group>\r\n                            <br/><br/>\r\n                            <Form.Label>Add Description to Annotate Trimmed Video</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                          placeholder=\"Add Descaription\"\r\n                                          onChange={this.handleInputChange}\r\n                                          value={this.state.description}\r\n                                          name=\"description\"\r\n\r\n                            />\r\n                            <Form.Label>Video Saving Folder</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n                        <button id=\"trimVideo\">Save Trimmed Video</button>\r\n                    </Form>\r\n\r\n                    }\r\n                    <br/><br/><br/>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default VideoTrimmer;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\Timeline.js",[],["201","202"],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\Complete.js",[],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\Analyze.js",["203","204"],"import React, {Component} from 'react';\r\nimport AnnotateVideo from \"./AnnotateVideo\";\r\nimport userimg from \"../../Images/user.png\";\r\nimport './style.css';\r\nimport axios from \"axios\";\r\n\r\nclass Analyze extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            yettoanalyzevideos: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"http://127.0.0.1:8000/VideoAnalysis/uploadretrieve/\")\r\n            .then(response => {\r\n                this.setState({yettoanalyzevideos: response.data});\r\n                console.log(this.props)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {yettoanalyzevideos}=this.state;\r\n        return(<div>\r\n            <div id=\"leftxx\">\r\n            {yettoanalyzevideos.map((video) => (\r\n                <div id=\"main12\">\r\n                    {(video.id % 2) === 1?\r\n                       <div id=\"left2\">\r\n                           <AnnotateVideo name={video.name} url={video.video} id={video.id}/>\r\n                       </div>\r\n\r\n                        :<div></div>}\r\n                </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div id=\"rightxx\">\r\n                {yettoanalyzevideos.map((video) => (\r\n                    <div id=\"main12\">\r\n                        {(video.id % 2) != 1?\r\n                            <div id=\"right2\">\r\n                                <AnnotateVideo name={video.name} url={video.video} id={video.id}/>\r\n                            </div>\r\n\r\n                            :<div></div>}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </div>);\r\n    }\r\n\r\n}\r\nexport default Analyze;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\Annotatemain.js",["205","206","207"],"import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport Analyze from \"./Analyze\";\r\nimport Complete from \"./Complete\";\r\n\r\nclass Annotatemain extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1 align=\"center\">Annotate</h1>\r\n                <h3 align=\"left\" id=\"headingSub\">Yet to be Annotated Videos</h3>\r\n                <div id=\"addmaincat4\">\r\n                    <div className=\"container\">\r\n                    <div className=\"sizecontainer\">\r\n                    </div></div>\r\n                    <div align=\"center\">\r\n                        <br/>\r\n                        <Analyze/>\r\n                        <br/>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n                <h3 align=\"left\" id=\"headingSub\">Annotation Completed Videos</h3>\r\n                <div id=\"addmaincat3\">\r\n                    <div className=\"container\">\r\n                        <div className=\"sizecontainer\">\r\n                    <div>\r\n                    </div>\r\n                    <div align=\"center\">\r\n                        <Complete/>\r\n                        <br/> <br/> <br/> <br/>\r\n                    </div></div></div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Annotatemain;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\AnnotatingDisplay\\AnnotateVideo.js",["208"],"import React, {Component} from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass AnnotateVideo extends Component {\r\n\r\n    static get propTypes() {\r\n        return {\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            url: PropTypes.string\r\n\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url:this.props.url,\r\n            name:this.props.name,\r\n            id:this.props.id,\r\n        }\r\n\r\n        //alert(this.state.url)\r\n\r\n       /* this.state.name=this.props.name;\r\n        this.state.id=this.props.id;\r\n        this.state.url=this.props.url;*/\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        let {name} = this.state;\r\n        let {id} = this.state;\r\n        let {url} = this.state;\r\n        return (\r\n            <div>\r\n                Video id:{id} Video Name:{name}\r\n                    <div>\r\n                        <div>\r\n                        <ReactPlayer\r\n                            controls={true}\r\n                            url={url}\r\n                            poster={this.state.name}\r\n                            width=\"400px\"\r\n                            height=\"250px\"\r\n                        />\r\n                        <div><br/>\r\n                            Chlid Specification\r\n                            <button className=\"videonavmainbtn\" style={{  textDecoration: 'none' }}> <Link to={\"/annotateVideo/id?_k=\" +id }> Annotate </Link></button>\r\n                        </div><br/><br/>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    gotoAnnotation() {\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AnnotateVideo;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\videos\\AddVideoModelAnnotate.js",["209","210","211","212"],"import React,{Component} from 'react';\r\nimport {Modal,Button,Row, Col,Form} from 'react-bootstrap';\r\nimport VideoPlayer from \"react-video-js-player\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport class AddVideoModelAnnotate extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            video: {\r\n                src: \"http://www.example.com/path/to/video.mp4\",\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onPlayerReady(player){\r\n        console.log(\"Player is ready: \", player);\r\n        this.player = player;\r\n    }\r\n\r\n    onVideoPlay(duration){\r\n        console.log(\"Video played at: \", duration);\r\n    }\r\n\r\n    onVideoPause(duration){\r\n        console.log(\"Video paused at: \", duration);\r\n    }\r\n\r\n    onVideoTimeUpdate(duration){\r\n        console.log(\"Time updated: \", duration);\r\n    }\r\n\r\n    onVideoSeeking(duration){\r\n        console.log(\"Video seeking: \", duration);\r\n    }\r\n\r\n    onVideoSeeked(from, to){\r\n        console.log(`Video seeked from ${from} to ${to}`);\r\n    }\r\n\r\n    onVideoEnd(){\r\n        console.log(\"Video ended\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Annotations -  Demo Video\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4></h4>\r\n                   <div className=\"container\">\r\n                       <div className=\"content pt-4 pt-lg-0\">\r\n                           <VideoPlayer\r\n                               controls={true}\r\n                               src={this.state.video.src}\r\n                               poster={this.state.video.poster}\r\n                               width=\"500px\"\r\n                               height=\"300px\"\r\n                               onReady={this.onPlayerReady.bind(this)}\r\n                               onPlay={this.onVideoPlay.bind(this)}\r\n                               onPause={this.onVideoPause.bind(this)}\r\n                               onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\r\n                               onSeeking={this.onVideoSeeking.bind(this)}\r\n                               onSeeked={this.onVideoSeeked.bind(this)}\r\n                               onEnd={this.onVideoEnd.bind(this)}\r\n                           />\r\n                       </div>\r\n\r\n                   </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button><Link to=\"/annotate\" id=\"nn\" style={{  textDecoration: 'none' }}>Go to Annotate Main Page</Link></Button>\r\n                    <Button onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\ViewAnnotations.js",["213","214"],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\configs\\config.js",[],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\markcomplete\\MarkAnnotateCompleteModel.js",["215","216","217","218"],"import React,{Component} from 'react';\r\nimport {Modal,Button,Row, Col,Form} from 'react-bootstrap';\r\nimport VideoPlayer from \"react-video-js-player\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {categoriesAPI} from \"../../configs/config\";\r\n\r\nexport class MarkAnnotateCompleteModel extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n    }\r\n    handleInputChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.name=this.state.name;\r\n        axios.post(categoriesAPI, {\r\n            name: this.name\r\n\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                window.location.reload();\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Mark Annotation Completed\r\n                    </Modal.Title><br/>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h7 style={{ color:'red' }}>\r\n                       **Make Sure to fill this form only if you have done all the annotations for a Particular Child Video.**\r\n                    </h7>\r\n                   <div className=\"container\">\r\n                       <Form className=\"form\" onSubmit={this.onSubmit} >\r\n                               <Form.Group>\r\n                                   <Form.Label>Video ID</Form.Label>\r\n                                   <Form.Control type=\"text\"\r\n                                                 placeholder=\"Video ID\"\r\n                                                 onChange={this.handleInputChange}\r\n                                                 value={this.state.name}\r\n                                                 name=\"name\"\r\n\r\n                                   />\r\n                               </Form.Group>\r\n                           <Form.Group>\r\n                               <Form.Label>Annotator ID and Name</Form.Label>\r\n                               <Form.Control type=\"text\"\r\n                                             placeholder=\"Annotator ID\"\r\n                                             onChange={this.handleInputChange}\r\n                                             value={this.state.name}\r\n                                             name=\"name\"\r\n\r\n                               />\r\n                           </Form.Group>\r\n                           <Form.Group>\r\n                               <Form.Label>Annotator Level</Form.Label>\r\n                               <Form.Control type=\"text\"\r\n                                             placeholder=\"Annotator Level\"\r\n                                             onChange={this.handleInputChange}\r\n                                             value={this.state.name}\r\n                                             name=\"name\"\r\n\r\n                               />\r\n                           </Form.Group>\r\n                           <Form.Group>\r\n                               <Form.Label>Date</Form.Label>\r\n                               <Form.Control type=\"date\"\r\n                                             onChange={this.handleInputChange}\r\n                                             value={this.state.name}\r\n                                             name=\"name\"\r\n\r\n                               />\r\n                               <Form.Group>\r\n                                   <Form.Label>Any Other Comments</Form.Label>\r\n                                   <Form.Control type=\"text\"\r\n                                                 placeholder=\"Type Comments here\"\r\n                                                 onChange={this.handleInputChange}\r\n                                                 value={this.state.name}\r\n                                                 name=\"name\"\r\n\r\n                                   />\r\n                               </Form.Group>\r\n                           </Form.Group>\r\n                               <Button id=\"btnSubmit\" variant=\"primary\" type=\"submit\">\r\n                                   Mark Complete and Submit\r\n                               </Button>\r\n\r\n                           </Form>\r\n\r\n\r\n\r\n                   </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.props.onHide}>Close This Form</Button>\r\n                    <Button>\r\n                        Download this File Folder\r\n                    </Button>\r\n                    <Button>\r\n                        View this File Folder\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level2Annotations\\Level2Annotations.js",["219","220","221","222","223","224","225"],"import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport VideoTrimmerLevel2 from \"./VideoTrimmerLevel2\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {categoriesAPI, videoUpload, categoriesLevel2API, categoriesLevel3API} from \"../../../configs/config\";\r\n\r\nclass Level2Annotations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            id:qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).k,\r\n            mainCategories: {},\r\n            idv:'',\r\n            url:'',\r\n            name:'',\r\n            trimstate:'Stop',\r\n            videodet:{}\r\n        }\r\n\r\n        this.trimmer = this.trimmer.bind(this);\r\n        this.trimmerEnd = this.trimmerEnd.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(videoUpload + this.state.id )\r\n            .then(response => {\r\n                this.setState({\r\n                        videodet:response.data\r\n                    }\r\n                )\r\n                //alert(this.state.url+\"hello aa level 1 ann.\")\r\n                this.loadCategories();\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })\r\n        sessionStorage.setItem('id',this.state.id);\r\n\r\n    }\r\n    loadCategories(){\r\n        axios.get(categoriesLevel2API +'?id='+this.state.videodet.category)\r\n            .then(response => {\r\n                this.setState({mainCategories: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        confirmAlert({\r\n                title: 'Confirm Closing Window.',\r\n                message: 'Navigation to other components are disabled in this Window.Are you Sure you want Close this Window?',\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes',\r\n                        onClick: () => window.close()\r\n                    },\r\n                    {\r\n                        label: 'No',\r\n                        onClick: () =>this.props.history.push('/level1/?k='+sessionStorage.getItem('id'))\r\n\r\n                    }\r\n                ]\r\n            });\r\n    }\r\n    trimmer(){\r\n        this.setState({\r\n                trimstate: 'start'\r\n            }\r\n        )\r\n\r\n    }\r\n    trimmerEnd(){\r\n        this.setState({\r\n                trimstate: 'stop'\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        let {idv} = this.state;\r\n        let {mainCategories} = this.state;\r\n        let {url} = this.state;\r\n        let {name} = this.state;\r\n        let {trimstate}=this.state;\r\n        let {id}=this.state;\r\n        let {videodet}=this.state;\r\n        let mainCategoriesList = mainCategories.length > 0\r\n            && mainCategories.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>{item.name}</option>\r\n                )\r\n            }, this);\r\n        return (\r\n            <div>\r\n                <div><br/><br/><br/><br/>\r\n                    <div id=\"main\">\r\n                        <h1> Level 2 Annotations</h1>\r\n                        <Typography variant=\"h6\"> Main Video ID (Unique Child Video ID) : {videodet.childid} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Level-1 Annotated Video ID  : {videodet.id} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Level 1 Annotated Category ID: {videodet.category} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Select Category for Level 2 Annotations <br/> </Typography>\r\n                        <select id=\"selectmain\" variant=\"primary\" ref = {(input)=> this.l1categoryid = input}>\r\n                            >\r\n                            {mainCategoriesList}\r\n                        </select>\r\n\r\n                        <br/><br/>\r\n                        <div align=\"center\">\r\n                            <button  onClick={this.trimmer} className=\"btn-dark\">\r\n                                Open Trimmer\r\n                            </button>\r\n                            <button  onClick={this.trimmerEnd} className=\"btn-dark\">\r\n                                Close Trimmer\r\n                            </button>\r\n                            <br/><br/>\r\n                            {trimstate==='start' ?\r\n                                <div>\r\n                                    <VideoTrimmerLevel2 childId = {videodet.childid} videoId={videodet.id} level={2} levelonecat={videodet.category} selectcategory={this.l1categoryid.value} url={videodet.video} />\r\n\r\n                                </div>\r\n                                : null}\r\n\r\n                        </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <br/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Level2Annotations;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level2Annotations\\VideoTrimmerLevel2.js",["226","227","228"],"import React, {Component} from 'react';\r\nimport {createFFmpeg, fetchFile} from '@ffmpeg/ffmpeg';\r\nimport video1 from '../../../Video_Store/ChildVideo1.mp4';\r\nimport ReactPlayer from 'react-player';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport '.././style.css';\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport axios from \"axios\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport {categoriesLevel2API, videoUpload,videoUploadLevelTwo} from \"../../../configs/config\";\r\n\r\nconst ffmpeg = createFFmpeg({log: true});\r\n\r\n/*Video trimming using ffempg. Its a open source library, react provides a package as well.\r\n* Do not remove video1 , which is retrieving from Video_Store\r\n* It is an essential component.\r\n*\r\n*\r\n* */\r\n\r\nclass VideoTrimmerLevel2 extends Component {\r\n\r\n   static get propTypes() {\r\n        return {\r\n            childId: PropTypes.number,\r\n            level: PropTypes.number,\r\n            selectcategory: PropTypes.number,\r\n            url:PropTypes.string,\r\n            videoId:PropTypes.number,\r\n            levelonecat:PropTypes.number,\r\n        }\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.player = React.createRef();\r\n        //this.myinput = React.createRef();\r\n        console.log(this.props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            video: video1,\r\n            gif: '',\r\n            currentTime: 0,\r\n            markedStartTime:'00:00',\r\n            markedEndTime:'00:00',\r\n            description:'',\r\n            childId: this.props.childId,\r\n            videoId:this.props.videoId,\r\n            selectedvideo:null,\r\n            vurl:this.props.url,\r\n            name:this.props.name,\r\n            selectedcategory:this.props.selectcategory,\r\n            time:'',\r\n            c_name:'',\r\n            levelonecat:'',\r\n\r\n        }\r\n        //alert(\"prop types\"+this.props.childId)\r\n        this.onChange = this.onChange.bind(this);\r\n        this.settimeStart = this.settimeStart.bind(this);\r\n        this.settimeEnd = this.settimeEnd.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.loadvideo = this.loadvideo.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        axios.get(categoriesLevel2API+this.state.selectedcategory)\r\n            .then(response => {\r\n                    this.setState({\r\n                            c_id: response.data.id,\r\n                            c_name:response.data.name,\r\n                        }\r\n                    )\r\n                console.log(\"displaying data\"+response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })\r\n\r\n    }\r\n    loadvideo(){\r\n\r\n    }\r\n\r\n    async loadx(){\r\n        await ffmpeg.load();\r\n        this.setState({ready: true});\r\n    }\r\n\r\n    async convertToTrimmed() {\r\n        // Write the file to memory\r\n        alert(\"Trimming Video........... \\n This may take few seconds or minutes depending the size of the given trimming video.\\n Once it is complete,the trimmed video will be loaded to below in the page.\");\r\n        await ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(this.state.vurl));\r\n\r\n        // Run the FFMpeg command\r\n        //-i input.mp4 -ss 00:00:05 -c copy -to 00:00:07 sliced-output.mp4\r\n       await ffmpeg.run('-i', 'test.mp4', '-ss', this.state.markedStartTime, '-c', 'copy', '-to', this.state.markedEndTime, 'out.mp4');\r\n\r\n        // Read the result\r\n        const data = ffmpeg.FS('readFile', 'out.mp4');\r\n        //console.log(\"here goes data...\" + data);\r\n\r\n        // Create a URL\r\n        const url = URL.createObjectURL(new Blob([data.buffer], {type: 'video/mp4'}));\r\n        //const filenew = await fetchFile(data);\r\n        const file = new File([data], \"out.mp4\")\r\n       // const file = new File([new Blob(data)], {type:\"video/mp4\"});\r\n\r\n        console.log(\"ttttttttt\"+ file);\r\n\r\n        this.setState({gif: url});\r\n        this.setState({selectedvideo: file});\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onChange(e){\r\n        if(!ffmpeg.isLoaded()){\r\n        this.loadx().then(r =>\r\n            this.convertToTrimmed()\r\n        );\r\n        }else{\r\n            confirmAlert({\r\n                title: 'Trimmed Video Status',\r\n                message: 'You have already trim a video. If need to trim again please re-load the page.',\r\n                buttons: [\r\n                    {\r\n                        label: 'OK',\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n    format(seconds){\r\n        if (isNaN(seconds)) {\r\n            return `00:00`;\r\n        }\r\n        const date = new Date(seconds * 1000);\r\n        const hh = date.getUTCHours();\r\n        const mm = date.getUTCMinutes();\r\n        const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n        if (hh) {\r\n            return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n        }\r\n        return `${mm}:${ss}`;\r\n    };\r\n\r\n    settimeStart(){\r\n\r\n        if(this.state.time!=='') {\r\n            this.setState({markedStartTime: this.state.time});\r\n            this.setState({time: ''});\r\n\r\n        }\r\n        else{\r\n        const timeStart = this.format(this.player.current.getCurrentTime());\r\n        this.setState({markedStartTime: timeStart});\r\n        }\r\n\r\n    }\r\n    settimeEnd(){\r\n\r\n\r\n        if(this.state.time!=='') {\r\n            this.setState({markedEndTime: this.state.time});\r\n            this.setState({time: ''});\r\n\r\n        }\r\n        else{\r\n            const timeEnd = this.format(this.player.current.getCurrentTime());\r\n            this.setState({markedEndTime: timeEnd});\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange(event){\r\n        this.setState({\r\n            description: event.target.value\r\n        })\r\n    }\r\n\r\n    handleInput(event){\r\n        this.setState({\r\n            time: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n       e.preventDefault()\r\n        let res = this.uploadFile(this.state.selectedvideo);\r\n        //console.log(res.data);\r\n    }\r\n    //async axios\r\n   uploadFile(file){\r\n\r\n        console.log(\"details\",this.props.childId,this.props.videoId,this.state.description,this.props.level,this.props.selectcategory);\r\n        //alert(\"display\"+this.props.levelonecat)\r\n\r\n        const formData = new FormData();\r\n        formData.append('childid',this.state.childId)\r\n        formData.append('childidLevel1',this.props.videoId)\r\n        formData.append('description',this.state.description)\r\n        formData.append('level',this.props.level)\r\n       formData.append('categoryid_one',this.props.levelonecat)\r\n        formData.append('category',this.props.selectcategory)\r\n        formData.append('video',this.state.selectedvideo)\r\n\r\n        return  axios.post(videoUploadLevelTwo, formData,{\r\n            headers: {\r\n               // contentType: \"multipart/form-data\", // important\r\n\r\n            }\r\n        })\r\n            .then(function (response) {\r\n            //console.log(response);\r\n            //window.location.reload();\r\n            alert('Successfully Saved the Data.\\n Click *Load Annotated Videos* Button to view the Results.')\r\n                window.close()\r\n        })\r\n            .catch((error) => {\r\n                alert('Error in Saving')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {vurl} = this.state;\r\n        const {childId} = this.state;\r\n        const {videoId} = this.state;\r\n        const {video} = this.state;\r\n        const {gif} = this.state;\r\n        const {markedStartTime} = this.state;\r\n        const {markedEndTime} = this.state\r\n        const {selectedcategory} = this.state;\r\n        const {c_name} = this.state;\r\n        return  (\r\n                <div className=\"App\">\r\n                    Video ID (Unique Child Video) : {childId} <br/>\r\n                    Video ID (Annotated Video 1 ID) : {videoId}<br/>\r\n                    Selected Category ID and Name : {selectedcategory}-----{c_name}<br/>\r\n                    Video url: {vurl}<br/>\r\n                    <br/><br/><br/>\r\n                    <br/><br/>\r\n                    {\r\n                        video &&\r\n                        <Container>\r\n                            <div className=\"PlayerWrapper\">\r\n                                 <br/>\r\n                        <ReactPlayer\r\n                            url={vurl}\r\n                            controls={true}\r\n                            ref={this.player}\r\n\r\n                        />\r\n                                <div className=\"ControlWrapper\">\r\n                                    <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\" style={{padding:16}}>\r\n                                        <Grid item>\r\n                                            Manual Enter Time:\r\n                                            <input type=\"text\"\r\n                                                   id=\"time\"\r\n                                                   name=\"time\"\r\n                                                   placeholder=\"00:00\"\r\n\r\n                                                   value={this.state.time}\r\n                                                   onChange={this.handleInput}\r\n\r\n                                            /><br/>\r\n                                            <button onClick={this.settimeStart} id=\"trimpoints\">Mark Trim Start Point\r\n                                            </button>\r\n                                            <button onClick={this.settimeEnd} id=\"trimpoints\">Mark Trim End Point\r\n                                            </button>\r\n                                            <div className=\"Trim Timming\">\r\n                                                Selected Times for Trimming Videos<br/>\r\n                                                Selected Trim Start:{markedStartTime} <br/>\r\n                                                Selected Trim End:  {markedEndTime} <br/>\r\n                                                <button onClick={this.onChange} id=\"trimVideo\">Trim Video</button>\r\n\r\n                                            </div>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Container>\r\n\r\n                    }\r\n                    <br/>\r\n\r\n                    <div className=\"trimmedResults\">\r\n                        <Typography variant=\"h6\"> Trimmed Video Results </Typography>\r\n                        <br/><br/>\r\n                    {gif &&\r\n                    <ReactPlayer controls={true} url={gif} />}\r\n                    { gif &&\r\n                    <Form className=\"trimmedResults2\" onSubmit={this.onSubmit} >\r\n                        <Form.Group>\r\n                            <br/><br/>\r\n                            <Form.Label>Add Description to Annotate Trimmed Video</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                          placeholder=\"Add Descaription\"\r\n                                          onChange={this.handleInputChange}\r\n                                          value={this.state.description}\r\n                                          name=\"description\"\r\n\r\n                            />\r\n                            <Form.Label>Video Saving Folder</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                          value={this.state.savefolder}\r\n                                          placeholder=\"Add Descaription\"\r\n                                          onChange={this.handleInputChange}\r\n                                          name=\"description\"\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <button id=\"trimVideo\">Save Trimmed Video</button>\r\n                    </Form>\r\n\r\n                    }\r\n                    <br/><br/><br/>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default VideoTrimmerLevel2;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level2Annotations\\ViewAnnotationsLevelTwo.js",["229"],"C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level3Annotations\\Level3Annotations.js",["230","231","232","233","234","235","236"],"import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport VideoTrimmerLevel3 from \"./VideoTrimmerLevel3\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {videoUploadLevelTwo, videoUpload, categoriesLevel2API, categoriesLevel3API} from \"../../../configs/config\";\r\n\r\nclass Level3Annotations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            id:qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).k,\r\n            mainCategories: {},\r\n            idv:'',\r\n            url:'',\r\n            name:'',\r\n            trimstate:'Stop',\r\n            videodet:{}\r\n        }\r\n\r\n        this.trimmer = this.trimmer.bind(this);\r\n        this.trimmerEnd = this.trimmerEnd.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(videoUploadLevelTwo + this.state.id )\r\n            .then(response => {\r\n                this.setState({\r\n                        videodet:response.data\r\n                    }\r\n                )\r\n                //alert(this.state.url+\"hello aa level 1 ann.\")\r\n                this.loadCategories();\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })\r\n        sessionStorage.setItem('id',this.state.id);\r\n\r\n    }\r\n    loadCategories(){\r\n        //alert(this.state.videodet.categoryid_one+'vvv'+this.state.videodet.category)\r\n        axios.get(categoriesLevel3API +'?id1='+this.state.videodet.categoryid_one+'&&id2='+this.state.videodet.category)\r\n            .then(response => {\r\n                this.setState({mainCategories: response.data});\r\n            } )\r\n            .catch(function (error) {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        confirmAlert({\r\n            title: 'Confirm Closing Window.',\r\n            message: 'Navigation to other components are disabled in this Window.Are you Sure you want Close this Window?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => window.close()\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () =>this.props.history.push('/level1/?k='+sessionStorage.getItem('id'))\r\n\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    trimmer(){\r\n        this.setState({\r\n                trimstate: 'start'\r\n            }\r\n        )\r\n\r\n    }\r\n    trimmerEnd(){\r\n        this.setState({\r\n                trimstate: 'stop'\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        let {idv} = this.state;\r\n        let {mainCategories} = this.state;\r\n        let {url} = this.state;\r\n        let {name} = this.state;\r\n        let {trimstate}=this.state;\r\n        let {id}=this.state;\r\n        let {videodet}=this.state;\r\n        let mainCategoriesList = mainCategories.length > 0\r\n            && mainCategories.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>{item.name}</option>\r\n                )\r\n            }, this);\r\n        return (\r\n            <div>\r\n                <div><br/><br/><br/><br/>\r\n                    <div id=\"main\">\r\n                        <h1> Level 3 Annotations</h1>\r\n                        <Typography variant=\"h6\"> Main Video ID (Unique Child Video ID) : {videodet.childid} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Level-1 Annotated Video ID  : {videodet.childidLevel1} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Level-1 Annotated Category ID  : {videodet.categoryid_one} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Level-2 Annotated Video ID  : {videodet.id} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Level-2 Annotated Category ID: {videodet.category} <br/> </Typography>\r\n                        <Typography variant=\"h6\"> Select Category for Level 3 Annotations <br/> </Typography>\r\n                        <select id=\"selectmain\" variant=\"primary\" ref = {(input)=> this.l1categoryid = input}>\r\n                            >\r\n                            {mainCategoriesList}\r\n                        </select>\r\n\r\n                        <br/><br/>\r\n                        <div align=\"center\">\r\n                            <button  onClick={this.trimmer} className=\"btn-dark\">\r\n                                Open Trimmer\r\n                            </button>\r\n                            <button  onClick={this.trimmerEnd} className=\"btn-dark\">\r\n                                Close Trimmer\r\n                            </button>\r\n                            <br/><br/>\r\n                            {trimstate==='start' ?\r\n                                <div>\r\n                                    <VideoTrimmerLevel3 childId = {videodet.childid} videoId={videodet.id}\r\n                                                        level={3} selectcategory={this.l1categoryid.value}\r\n                                                        url={videodet.video} level1Id={videodet.childidLevel1}\r\n                                                        catlevel1={videodet.categoryid_one} catlevel2={videodet.category}/>\r\n\r\n                                </div>\r\n                                : null}\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Level3Annotations;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level3Annotations\\VideoTrimmerLevel3.js",["237","238","239"],"import React, {Component} from 'react';\r\nimport {createFFmpeg, fetchFile} from '@ffmpeg/ffmpeg';\r\nimport video1 from '../../../Video_Store/ChildVideo1.mp4';\r\nimport ReactPlayer from 'react-player';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport '.././style.css';\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport axios from \"axios\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport {categoriesLevel3API, videoUpload,videoUploadLevelThree} from \"../../../configs/config\";\r\n\r\nconst ffmpeg = createFFmpeg({log: true});\r\n\r\n/*Video trimming using ffempg. Its a open source library, react provides a package as well.\r\n* Do not remove video1 , which is retrieving from Video_Store\r\n* It is an essential component.\r\n*\r\n*\r\n* */\r\n\r\nclass VideoTrimmerLevel3 extends Component {\r\n\r\n    static get propTypes() {\r\n        return {\r\n            childId: PropTypes.number,\r\n            level: PropTypes.number,\r\n            selectcategory: PropTypes.number,\r\n            url:PropTypes.string,\r\n            videoId:PropTypes.number,\r\n            level1Id:PropTypes.number,\r\n            catlevel1:PropTypes.number,\r\n            catlevel2:PropTypes.number,\r\n        }\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.player = React.createRef();\r\n        //this.myinput = React.createRef();\r\n        console.log(this.props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            video: video1,\r\n            gif: '',\r\n            currentTime: 0,\r\n            markedStartTime:'00:00',\r\n            markedEndTime:'00:00',\r\n            description:'',\r\n            childId: this.props.childId,\r\n            videoId:this.props.videoId,\r\n            selectedvideo:null,\r\n            vurl:this.props.url,\r\n            name:this.props.name,\r\n            selectedcategory:this.props.selectcategory,\r\n            time:'',\r\n            c_name:'',\r\n            savefolder:'/media',\r\n            level1Id:this.props.level1Id\r\n\r\n        }\r\n        //alert(\"prop types\"+this.props.childId)\r\n        this.onChange = this.onChange.bind(this);\r\n        this.settimeStart = this.settimeStart.bind(this);\r\n        this.settimeEnd = this.settimeEnd.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.loadvideo = this.loadvideo.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        axios.get(categoriesLevel3API+this.state.selectedcategory)\r\n            .then(response => {\r\n                this.setState({\r\n                        c_id: response.data.id,\r\n                        c_name:response.data.name,\r\n                    }\r\n                )\r\n                console.log(\"displaying data\"+response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n\r\n            })\r\n\r\n    }\r\n    loadvideo(){\r\n\r\n    }\r\n\r\n    async loadx(){\r\n        await ffmpeg.load();\r\n        this.setState({ready: true});\r\n    }\r\n\r\n    async convertToTrimmed() {\r\n        // Write the file to memory\r\n        alert(\"Trimming Video........... \\n This may take few seconds or minutes depending the size of the given trimming video.\\n Once it is complete,the trimmed video will be loaded to below in the page.\");\r\n        await ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(this.state.vurl));\r\n\r\n        // Run the FFMpeg command\r\n        //-i input.mp4 -ss 00:00:05 -c copy -to 00:00:07 sliced-output.mp4\r\n        await ffmpeg.run('-i', 'test.mp4', '-ss', this.state.markedStartTime, '-c', 'copy', '-to', this.state.markedEndTime, 'out.mp4');\r\n\r\n        // Read the result\r\n        const data = ffmpeg.FS('readFile', 'out.mp4');\r\n        //console.log(\"here goes data...\" + data);\r\n\r\n        // Create a URL\r\n        const url = URL.createObjectURL(new Blob([data.buffer], {type: 'video/mp4'}));\r\n        //const filenew = await fetchFile(data);\r\n        const file = new File([data], \"out.mp4\")\r\n        // const file = new File([new Blob(data)], {type:\"video/mp4\"});\r\n\r\n        console.log(\"ttttttttt\"+ file);\r\n\r\n        this.setState({gif: url});\r\n        this.setState({selectedvideo: file});\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onChange(e){\r\n        if(!ffmpeg.isLoaded()){\r\n            this.loadx().then(r =>\r\n                this.convertToTrimmed()\r\n            );\r\n        }else{\r\n            confirmAlert({\r\n                title: 'Trimmed Video Status',\r\n                message: 'You have already trim a video. If need to trim again please re-load the page.',\r\n                buttons: [\r\n                    {\r\n                        label: 'OK',\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n    format(seconds){\r\n        if (isNaN(seconds)) {\r\n            return `00:00`;\r\n        }\r\n        const date = new Date(seconds * 1000);\r\n        const hh = date.getUTCHours();\r\n        const mm = date.getUTCMinutes();\r\n        const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n        if (hh) {\r\n            return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n        }\r\n        return `${mm}:${ss}`;\r\n    };\r\n\r\n    settimeStart(){\r\n\r\n        if(this.state.time!=='') {\r\n            this.setState({markedStartTime: this.state.time});\r\n            this.setState({time: ''});\r\n\r\n        }\r\n        else{\r\n            const timeStart = this.format(this.player.current.getCurrentTime());\r\n            this.setState({markedStartTime: timeStart});\r\n        }\r\n\r\n    }\r\n    settimeEnd(){\r\n\r\n\r\n        if(this.state.time!=='') {\r\n            this.setState({markedEndTime: this.state.time});\r\n            this.setState({time: ''});\r\n\r\n        }\r\n        else{\r\n            const timeEnd = this.format(this.player.current.getCurrentTime());\r\n            this.setState({markedEndTime: timeEnd});\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange(event){\r\n        this.setState({\r\n            description: event.target.value\r\n        })\r\n    }\r\n\r\n    handleInput(event){\r\n        this.setState({\r\n            time: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        let res = this.uploadFile(this.state.selectedvideo);\r\n        //console.log(res.data);\r\n    }\r\n    //async axios\r\n    uploadFile(file){\r\n\r\n        console.log(\"details\",this.props.childId,this.props.videoId,this.state.description,this.props.level,this.props.selectcategory);\r\n\r\n        const formData = new FormData();\r\n        formData.append('childid',this.props.childId)\r\n        formData.append('childidLevel1',this.props.level1Id)\r\n        formData.append('childidLevel2',this.props.videoId)\r\n        formData.append('description',this.state.description)\r\n        formData.append('level',this.props.level)\r\n        formData.append('category',this.props.catlevel2)\r\n        formData.append('categoryid_one',this.props.catlevel1)\r\n        formData.append('categoryid_three',this.props.selectcategory)\r\n        formData.append('folderstructure',this.state.savefolder)\r\n        formData.append('video',this.state.selectedvideo)\r\n\r\n        return  axios.post(videoUploadLevelThree, formData,{\r\n            headers: {\r\n                // contentType: \"multipart/form-data\", // important\r\n\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                //console.log(response);\r\n                //window.location.reload();\r\n                alert('Successfully Saved the Data.\\n Click *Load Annotated Videos* Button to view the Results.')\r\n                window.close()\r\n            })\r\n            .catch((error) => {\r\n                alert('Error in Saving')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {vurl} = this.state;\r\n        const {childId} = this.state;\r\n        const {videoId} = this.state;\r\n        const {level1Id}=this.state;\r\n        const {video} = this.state;\r\n        const {gif} = this.state;\r\n        const {markedStartTime} = this.state;\r\n        const {markedEndTime} = this.state\r\n        const {selectedcategory} = this.state;\r\n        const {c_name} = this.state;\r\n        return  (\r\n            <div className=\"App\">\r\n                Video ID (Unique Child Video) : {childId} <br/>\r\n                Video ID (Annotated Video 1 ID) : {videoId}<br/>\r\n                Video ID (Annotated Video 2 ID) : {level1Id}<br/>\r\n                Selected Category ID and Name : {selectedcategory}-----{c_name}<br/>\r\n                Video url: {vurl}<br/>\r\n                <br/><br/><br/>\r\n                <br/><br/>\r\n                {\r\n                    video &&\r\n                    <Container>\r\n                        <div className=\"PlayerWrapper\">\r\n                            <br/>\r\n                            <ReactPlayer\r\n                                url={vurl}\r\n                                controls={true}\r\n                                ref={this.player}\r\n\r\n                            />\r\n                            <div className=\"ControlWrapper\">\r\n                                <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\" style={{padding:16}}>\r\n                                    <Grid item>\r\n                                        Manual Enter Time:\r\n                                        <input type=\"text\"\r\n                                               id=\"time\"\r\n                                               name=\"time\"\r\n                                               placeholder=\"00:00\"\r\n\r\n                                               value={this.state.time}\r\n                                               onChange={this.handleInput}\r\n\r\n                                        /><br/>\r\n                                        <button onClick={this.settimeStart} id=\"trimpoints\">Mark Trim Start Point\r\n                                        </button>\r\n                                        <button onClick={this.settimeEnd} id=\"trimpoints\">Mark Trim End Point\r\n                                        </button>\r\n                                        <div className=\"Trim Timming\">\r\n                                            Selected Times for Trimming Videos<br/>\r\n                                            Selected Trim Start:{markedStartTime} <br/>\r\n                                            Selected Trim End:  {markedEndTime} <br/>\r\n                                            <button onClick={this.onChange} id=\"trimVideo\">Trim Video</button>\r\n\r\n                                        </div>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Container>\r\n\r\n                }\r\n                <br/>\r\n\r\n                <div className=\"trimmedResults\">\r\n                    <Typography variant=\"h6\"> Trimmed Video Results </Typography>\r\n                    <br/><br/>\r\n                    {gif &&\r\n                    <ReactPlayer controls={true} url={gif} />}\r\n                    { gif &&\r\n                    <Form className=\"trimmedResults2\" onSubmit={this.onSubmit} >\r\n                        <Form.Group>\r\n                            <br/><br/>\r\n                            <Form.Label>Add Description to Annotate Trimmed Video</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                          placeholder=\"Add Descaription\"\r\n                                          onChange={this.handleInputChange}\r\n                                          value={this.state.description}\r\n                                          name=\"description\"\r\n\r\n                            />\r\n                            <Form.Label>Video Saving Folder</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                          value={this.state.savefolder}\r\n                                          placeholder=\"Add Descaription\"\r\n                                          onChange={this.handleInputChange}\r\n                                          name=\"description\"\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <button id=\"trimVideo\">Save Trimmed Video</button>\r\n                    </Form>\r\n\r\n                    }\r\n                    <br/><br/><br/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default VideoTrimmerLevel3;\r\n","C:\\Users\\vnaso\\Documents\\videoPro\\video-app\\src\\components\\VideoAnnotating\\level3Annotations\\ViewAnnotationsLevelThree.js",["240"],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":14,"column":8,"nodeType":"247","messageId":"248","endLine":14,"endColumn":13},{"ruleId":"245","severity":1,"message":"249","line":2,"column":13,"nodeType":"247","messageId":"248","endLine":2,"endColumn":20},{"ruleId":"245","severity":1,"message":"250","line":2,"column":21,"nodeType":"247","messageId":"248","endLine":2,"endColumn":27},{"ruleId":"245","severity":1,"message":"251","line":2,"column":28,"nodeType":"247","messageId":"248","endLine":2,"endColumn":39},{"ruleId":"245","severity":1,"message":"252","line":6,"column":9,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"253","line":4,"column":9,"nodeType":"247","messageId":"248","endLine":4,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":15},{"ruleId":"245","severity":1,"message":"255","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"256","line":6,"column":26,"nodeType":"247","messageId":"248","endLine":6,"endColumn":32},{"ruleId":"245","severity":1,"message":"257","line":6,"column":33,"nodeType":"247","messageId":"248","endLine":6,"endColumn":38},{"ruleId":"245","severity":1,"message":"258","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"259","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":16},{"ruleId":"245","severity":1,"message":"260","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":14},{"ruleId":"245","severity":1,"message":"261","line":10,"column":8,"nodeType":"247","messageId":"248","endLine":10,"endColumn":18},{"ruleId":"245","severity":1,"message":"262","line":11,"column":9,"nodeType":"247","messageId":"248","endLine":11,"endColumn":15},{"ruleId":"245","severity":1,"message":"263","line":11,"column":16,"nodeType":"247","messageId":"248","endLine":11,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":24,"column":41,"nodeType":"266","endLine":24,"endColumn":73},{"ruleId":"264","severity":1,"message":"265","line":25,"column":41,"nodeType":"266","endLine":25,"endColumn":74},{"ruleId":"264","severity":1,"message":"265","line":26,"column":41,"nodeType":"266","endLine":26,"endColumn":75},{"ruleId":"264","severity":1,"message":"265","line":27,"column":41,"nodeType":"266","endLine":27,"endColumn":77},{"ruleId":"264","severity":1,"message":"265","line":28,"column":41,"nodeType":"266","endLine":28,"endColumn":74},{"ruleId":"264","severity":1,"message":"265","line":36,"column":81,"nodeType":"266","endLine":36,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":37,"column":81,"nodeType":"266","endLine":37,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":38,"column":81,"nodeType":"266","endLine":38,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":39,"column":81,"nodeType":"266","endLine":39,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":40,"column":81,"nodeType":"266","endLine":40,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":47,"column":81,"nodeType":"266","endLine":47,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":48,"column":81,"nodeType":"266","endLine":48,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":49,"column":81,"nodeType":"266","endLine":49,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":50,"column":81,"nodeType":"266","endLine":50,"endColumn":93},{"ruleId":"264","severity":1,"message":"265","line":51,"column":81,"nodeType":"266","endLine":51,"endColumn":93},{"ruleId":"245","severity":1,"message":"267","line":2,"column":22,"nodeType":"247","messageId":"248","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"268","line":2,"column":27,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"269","line":2,"column":31,"nodeType":"247","messageId":"248","endLine":2,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":61,"column":21,"nodeType":"266","endLine":61,"endColumn":25},{"ruleId":"245","severity":1,"message":"272","line":4,"column":24,"nodeType":"247","messageId":"248","endLine":4,"endColumn":33},{"ruleId":"245","severity":1,"message":"273","line":4,"column":35,"nodeType":"247","messageId":"248","endLine":4,"endColumn":46},{"ruleId":"245","severity":1,"message":"274","line":4,"column":48,"nodeType":"247","messageId":"248","endLine":4,"endColumn":60},{"ruleId":"245","severity":1,"message":"275","line":98,"column":13,"nodeType":"247","messageId":"248","endLine":98,"endColumn":15},{"ruleId":"245","severity":1,"message":"275","line":99,"column":17,"nodeType":"247","messageId":"248","endLine":99,"endColumn":19},{"ruleId":"245","severity":1,"message":"276","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":19},{"ruleId":"245","severity":1,"message":"277","line":9,"column":9,"nodeType":"247","messageId":"248","endLine":9,"endColumn":22},{"ruleId":"245","severity":1,"message":"262","line":7,"column":9,"nodeType":"247","messageId":"248","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"278","line":8,"column":47,"nodeType":"247","messageId":"248","endLine":8,"endColumn":58},{"ruleId":"245","severity":1,"message":"262","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":14},{"ruleId":"245","severity":1,"message":"279","line":216,"column":13,"nodeType":"247","messageId":"248","endLine":216,"endColumn":16},{"ruleId":"241","replacedBy":"280"},{"ruleId":"243","replacedBy":"281"},{"ruleId":"245","severity":1,"message":"254","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":50,"column":41,"nodeType":"284","messageId":"285","endLine":50,"endColumn":43},{"ruleId":"245","severity":1,"message":"253","line":2,"column":9,"nodeType":"247","messageId":"248","endLine":2,"endColumn":13},{"ruleId":"245","severity":1,"message":"262","line":3,"column":9,"nodeType":"247","messageId":"248","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"287","line":10,"column":5,"nodeType":"288","messageId":"289","endLine":12,"endColumn":6},{"ruleId":"245","severity":1,"message":"290","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":13},{"ruleId":"245","severity":1,"message":"267","line":2,"column":22,"nodeType":"247","messageId":"248","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"268","line":2,"column":27,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"269","line":2,"column":31,"nodeType":"247","messageId":"248","endLine":2,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":61,"column":21,"nodeType":"266","endLine":61,"endColumn":25},{"ruleId":"245","severity":1,"message":"291","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":10},{"ruleId":"245","severity":1,"message":"292","line":6,"column":29,"nodeType":"247","messageId":"248","endLine":6,"endColumn":52},{"ruleId":"245","severity":1,"message":"267","line":2,"column":22,"nodeType":"247","messageId":"248","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"268","line":2,"column":27,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"293","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":19},{"ruleId":"245","severity":1,"message":"253","line":4,"column":9,"nodeType":"247","messageId":"248","endLine":4,"endColumn":13},{"ruleId":"245","severity":1,"message":"262","line":7,"column":9,"nodeType":"247","messageId":"248","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"294","line":8,"column":9,"nodeType":"247","messageId":"248","endLine":8,"endColumn":22},{"ruleId":"245","severity":1,"message":"295","line":8,"column":58,"nodeType":"247","messageId":"248","endLine":8,"endColumn":77},{"ruleId":"245","severity":1,"message":"296","line":91,"column":14,"nodeType":"247","messageId":"248","endLine":91,"endColumn":17},{"ruleId":"245","severity":1,"message":"297","line":93,"column":14,"nodeType":"247","messageId":"248","endLine":93,"endColumn":17},{"ruleId":"245","severity":1,"message":"298","line":94,"column":14,"nodeType":"247","messageId":"248","endLine":94,"endColumn":18},{"ruleId":"245","severity":1,"message":"299","line":96,"column":14,"nodeType":"247","messageId":"248","endLine":96,"endColumn":16},{"ruleId":"245","severity":1,"message":"262","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":14},{"ruleId":"245","severity":1,"message":"278","line":14,"column":30,"nodeType":"247","messageId":"248","endLine":14,"endColumn":41},{"ruleId":"245","severity":1,"message":"279","line":204,"column":13,"nodeType":"247","messageId":"248","endLine":204,"endColumn":16},{"ruleId":"245","severity":1,"message":"300","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"262","line":7,"column":9,"nodeType":"247","messageId":"248","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"278","line":8,"column":30,"nodeType":"247","messageId":"248","endLine":8,"endColumn":41},{"ruleId":"245","severity":1,"message":"301","line":8,"column":43,"nodeType":"247","messageId":"248","endLine":8,"endColumn":62},{"ruleId":"245","severity":1,"message":"296","line":92,"column":14,"nodeType":"247","messageId":"248","endLine":92,"endColumn":17},{"ruleId":"245","severity":1,"message":"297","line":94,"column":14,"nodeType":"247","messageId":"248","endLine":94,"endColumn":17},{"ruleId":"245","severity":1,"message":"298","line":95,"column":14,"nodeType":"247","messageId":"248","endLine":95,"endColumn":18},{"ruleId":"245","severity":1,"message":"299","line":97,"column":14,"nodeType":"247","messageId":"248","endLine":97,"endColumn":16},{"ruleId":"245","severity":1,"message":"262","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":14},{"ruleId":"245","severity":1,"message":"278","line":14,"column":30,"nodeType":"247","messageId":"248","endLine":14,"endColumn":41},{"ruleId":"245","severity":1,"message":"279","line":207,"column":13,"nodeType":"247","messageId":"248","endLine":207,"endColumn":16},{"ruleId":"245","severity":1,"message":"300","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'Home1' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'itIT' is defined but never used.","'Link' is defined but never used.","'userimg' is defined but never used.","'photo1' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Analyze' is defined but never used.","'Complete' is defined but never used.","'Switch' is defined but never used.","'ModalVideo' is defined but never used.","'Button' is defined but never used.","'ButtonToolbar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","'tt' is assigned a value but never used.","'ReactPlayer' is defined but never used.","'AddVideoModel' is defined but never used.","'videoUpload' is defined but never used.","'res' is assigned a value but never used.",["302"],["303"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","'qs' is defined but never used.","'videoRetrievefromUpload' is defined but never used.","'VideoPlayer' is defined but never used.","'categoriesAPI' is defined but never used.","'categoriesLevel3API' is defined but never used.","'idv' is assigned a value but never used.","'url' is assigned a value but never used.","'name' is assigned a value but never used.","'id' is assigned a value but never used.","'video1' is defined but never used.","'categoriesLevel2API' is defined but never used.","no-global-assign","no-unsafe-negation"]